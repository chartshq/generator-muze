{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/./packages/muze/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/data-format.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/dimension-subtype.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/field-type.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/filtering-mode.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/row-diffset-iterator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/field.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/date-time-formatter.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/column-major.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/extend2.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/helper.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/field-store.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/value.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/bucket-creator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/constants/index.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/child-iterator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/compose.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/pure-operators.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/get-common-schema.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/cross-product.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/merge-sort.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/data-builder.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/difference.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/group-by-function.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/reducer-store.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/group-by.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/natural-join-filter-function.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/natural-join.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/union.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/outer-join.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/partial-field.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/measure.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/domain-generator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/dimension.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/categorical.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/datetime.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/discreteMeasure.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/field-creator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/default-config.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/dsv-arr.js","webpack://muze/./packages/muze-utils/node_modules/d3-dsv/src/dsv.js","webpack://muze/./packages/muze-utils/node_modules/d3-dsv/src/csv.js","webpack://muze/./packages/muze-utils/node_modules/d3-dsv/src/tsv.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/dsv-str.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/flat-json.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/auto-resolver.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/helper.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/relation.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/datamodel.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/stats/index.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/utils/set.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/utils/index.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/graph-node.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/electric-node.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/graph.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/index.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/model.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/active.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/DataSystem/data-object.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/enums/defaults.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/renderer.js","webpack://muze/./packages/muze/src/canvas/firebolt.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","lib","init","win","doc","document","userAgent","navigator","ceil","Math","floor","clsNameSpace","containerClass","classNameWithTag","classNameWithTagBR","maxDefaultCacheLimit","classNameReg","RegExp","classNameBrReg","spanAdditionRegx","spanAdditionReplacer","spanRemovalRegx","xmlTagRegEx","ltgtRegex","brReplaceRegex","testStrAvg","parentContainerStyle","position","top","whiteSpace","padding","width","height","overflow","supportedStyle","font","fontFamily","font-family","fontWeight","font-weight","fontSize","font-size","lineHeight","line-height","fontStyle","font-style","getDocumentSupport","childRetriverFn","childRetriverString","noClassTesting","getElementsByClassName","isIE","test","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","isHeadLess","isWebKit","createContainer","containerParent","body","container","offsetWidth","offsetHeight","appendChild","createElement","className","setAttribute","getElementsByTagName","getNearestBreakIndex","text","maxWidth","sl","length","difference","getWidth","_getWidthFn","charLen","increment","oriWidth","avgWidth","substr","setLineHeight","styleObj","fSize","parseInt","_interopRequireDefault","obj","default","_lib2","_containerManager2","slLib","undefined","M","max","round","htmlSplCharSpace"," ","documentSupport","SVG_BBOX_CORRECTION","SmartLabelManager","id","useEllipses","options","wrapper","prop","prevInstance","isBrowserLess","store","_typeof","dispose","this","maxCacheLimit","isFinite","getElementById","innerHTML","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","toString","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","cacheInitName","repeat","Array","join","push","shift","parseFloat","contObj","_containerObj","svgText","str","bbox","textContent","getBBox","_styleNotSet","sCont","node","_context","context","_cache","charCache","_lineHeight","useEllipsesOnOverflow","getSmartText","maxHeight","noWrap","len","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriHeight","newCharIndex","nearestChar","tempChar","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","y","minWidth","elem","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","match","getOriSize","detailObj","tooltext","lastIndexOf","splice","concat","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","removeChild","error","Error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","Muze","ContainerManager","maxContainers","svg","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","next","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","a","b","NaN","bisector","compare","ascendingComparator","f","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","number","array_array","src_range","map","start","stop","step","arguments","range","e10","sqrt","e5","e2","src_ticks","count","reverse","ticks","tickIncrement","power","log","LN10","pow","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","map_Map","map_map","each","set","isArray","constructor","has","remove","clear","keys","entries","empty","src_map","src_nest","sortValues","rollup","nest","sortKeys","apply","array","depth","createResult","setResult","sort","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","v","k","order","set_Set","proto","set_set","add","src_array_array","src_array_map","array_slice","implicit","ordinal","index","domain","unknown","scale","_","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","rangeRound","min","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","arr","side","highVal","d1","low","high","extend","parent","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","trim","toLowerCase","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","A","B","C","cubehelix_D","E","ED","EB","BC_DA","cubehelix_cubehelix","cubehelixConvert","Cubehelix","bl","basis","t1","v0","v1","v2","v3","cosh","sinh","src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","source","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_value","value_typeof","src_rgb","Date","setTime","nb","na","valueOf","src_round","degrees","decompose_identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hslLong","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","d3_scale_src_constant","d3_scale_src_number","continuous_unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","j","target","clamp","continuous","piecewise","output","input","deinterpolateClamp","reinterpolateClamp","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","zero","comma","precision","type","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","defaultLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear_linear","identity_identity","src_nice","interval","x0","x1","log_deinterpolate","log_reinterpolate","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","quantile_quantile","thresholds","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","offset","previous","filter","every","millisecond_millisecond","src_millisecond","durationMinute","durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","src_hour","day_day","setHours","setDate","getDate","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","src_month","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","H","S","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","locale_pad","string","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","getMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","getSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","src_utcDay","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","defaultLocale_defaultLocale","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","Y","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","pad","newParse","newDate","week","toISOString","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatYear","tickIntervals","tickInterval","t0","src_time","src_minute","src_second","src_colors","category10","category20b","category20","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","src_ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr","RdBu","RdGy","RdYlBu","RdYlGn","Spectral","BuGn","BuPu","GnBu","OrRd","PuBuGn","PuBu","PuRd","RdPu","YlGnBu","YlGn","YlOrBr","YlOrRd","Blues_scheme","Blues","Greens","Greys","Purples","Reds","Oranges","sequential_multi_cubehelix","rainbow_warm","rainbow_cool","rainbow_c","sequential_multi_rainbow","ts","viridis_ramp","viridis_magma","viridis_inferno","viridis_plasma","reserved_fields","ROW_ID","common_props","ACTION_INF","ON_LAYER_DRAW","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","rowDiffsetIterator","rowDiffset","callback","forEach","diffStr","diffStsArr","Field","partialFeild","rowDiff","_classCallCheck","_ref","_rowDiff","sanitize","val","parsed","data","getData","fieldType","subType","Set","datas","clone","fieldName","description","getMinDiff","unit","defAggFn","_this","bins","schema","convertToNativeDate","date_time_formatter_pad","DateTimeFormatter","dtParams","nativeDate","escape","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","parsedVal","defaultRangeParser","nVal","getTokenDefinitions","daysDef","short","long","monthsDef","extract","parser","formatter","hours","P","K","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","occurrence","forwardChar","token","formatAs","nDate","formattedStr","String","formattedVal","dateTimeStamp","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","getNativeDate","unshift","Function","column_major","_len","fields","_key","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","extend2_typeof","extend2_merge","tgtArr","srcArr","item","srcVal","tgtVal","cRef","isCallable","getUniqueId","getTime","random","unique","helper_toConsumableArray","uniqueVals","isArrEqual","arr1","arr2","formatNumber","field_store","createNamespace","fieldArr","dataId","fieldsObj","retObj","getMeasure","getDimension","datamodel_src_value","Value","value_classCallCheck","configurable","writable","_value","createBinnedFieldData","config","buckets","numOfBins","binSize","dataStore","binnedData","_field$domain","_field$domain2","_slicedToArray","oriMax","binEnd","prevEndpoint","extraBinELm","endPoint","datum","bucket_creator_toConsumableArray","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","LOGICAL_OPERATORS","childIterator","datamodel","operation","_children","child","_derivation","op","criteria","meta","actualProjField","groupByString","reducer","params","selectIterator","calculatedVariableIterator","projectIterator","groupByIterator","compose","operations","dm","currentDM","frstChild","derivations","saveChild","compose_toConsumableArray","addParent","compose_bin","bin","_len2","_key2","compose_select","select","_len3","_key3","compose_project","project","_len4","_key4","pure_operators_calculateVariable","calculateVariable","pure_operators_sort","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","tupleObj","cellVal","iii","src_datamodel","defSortFn","a1","b1","mergeSort","sortFn","merge_sort_sort","merge_sort_merge","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","dataBuilder","fieldStore","colIdentifier","sortingDetails","uids","addUid","assign","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortData","dataObj","sortMeta","fDetails","fieldInSchema","sortingFn","data_builder_toConsumableArray","tmpData","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","addData","hashData","schemaName","datamodel_src","group_by_function_sum","allNulls","isNestedArray","sumVal","carry","group_by_function_toConsumableArray","avg","arrSum","fnList","sum","group_by_function_min","group_by_function_max","group_by_function_count","std","group_by_function_variance","mean","num","reducer_store_ReducerStore","ReducerStore","reducer_store_classCallCheck","_this2","__unregister","delete","reducer_store","getStore","getFieldArr","dataModel","getPartialFieldspace","dimensions","measures","group_by_slicedToArray","_ref3","getReducerObj","reducers","pReducers","defaultReducer","_ref5","resolve","group_by_groupBy","existingDataModel","sFieldArr","reducerObj","fieldStoreObj","dbName","dimensionArr","measureArr","newDataModel","_ref7","_ref8","subtype","rowCount","hash","row","__calculateFieldspace","naturalJoinFilter","commonSchemaArr","retainTuple","natural_join_naturalJoin","dataModel1","dataModel2","union_union","leftOuterJoin","rightOuterJoin","fullOuterJoin","partial_field","PartialField","partial_field_classCallCheck","fieldDescription","fields_measure","Measure","measure_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","fieldUnit","fieldScale","fieldDefAggFn","fieldNumberformat","numberFormat","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","domain_generator","fields_dimension","helper_uniqueValues","_unique","categorical","Categorical","categorical_classCallCheck","categorical_possibleConstructorReturn","datetime","DateTime","datetime_classCallCheck","datetime_possibleConstructorReturn","minDiff","_dtf","discreteMeasure","DiscreteMeasure","discreteMeasure_classCallCheck","discreteMeasure_possibleConstructorReturn","field_creator","createFields","dataColumn","headers","headersObj","header","createUnitField","default_config","dataFormat","dsv_arr","DSVArr","firstRowHeader","columns","dsv_arr_toConsumableArray","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","src_dsv","delimiter","reFormat","DELIMITER","parseRows","rows","N","eof","eol","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","formatRows","csv","tsv","dsv_str","DSVStr","fieldSeparator","dsv","flat_json","FlatJSON","insertionIndex","auto_resolver","Auto","converter","isString","isObject","prepareSelectionData","resp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","helper_persistDerivation","persistDerivation","model","_model$_derivation","criteriaFn","derivative","src_helper_toConsumableArray","helper_filterPropagationModel","filterPropagationModel","propModels","filterByMeasure","fns","propModel","fieldsConfig","getFieldsConfig","fieldsSpace","def","some","propField","filteredModel","fn","helper_cloneWithSelect","cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","checker","helper_selectHelper","calculateFieldsConfig","helper_cloneWithProject","cloneWithProject","projField","allFields","projectionSet","helper_updateData","updateData","relation","converterFn","converter_namespaceObject","_converterFn","_converterFn2","helper_slicedToArray","formattedData","nameSpace","_partialFieldspace","helper_propagateIdentifiers","propagateIdentifiers","nonTraversingModel","grouped","forwardPropagation","targetDM","propagationData","hasGrouped","handlePropagation","payload","sourceIdentifiers","sourceId","propagationSourceId","groupedPropModel","selectionModel","rejectionModel","projModel","rejectionProjModel","conf","selectionGroupedModel","groupBy","rejectionGroupedModel","_propModel$0$clone","_propModel$1$clone","entryModel","replaceVar","exitModel","getRootDataModel","_parent","propagateToAllDataModels","identifiers","rootModels","propagationNameSpace","filteredCriteria","mutableActions","action","rootGroupByModel","groupByModel","rootModel","propConfig","src_relation","Relation","relation_classCallCheck","_fieldStoreName","_propagationNameSpace","immutableActions","_fieldspace","updateFields","partialFieldspace","fieldStoreName","_ref2","collID","partialFieldMap","newFields","coll","fields_field","helper_updateFields","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","fieldConfig","normalizedProjField","relation_toConsumableArray","search","_fieldConfig","fieldDef","findIndex","sibling","criteriaQueue","DataModel","datamodel_classCallCheck","datamodel_possibleConstructorReturn","_onPropagation","_sortingDetails","withUid","dataGenerated","fieldNames","fmtFieldIdx","fIdx","fmtFn","datumIdx","fieldsArr","rawData","dataInCSVArr","sortedDm","fieldinst","dependency","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","datamodel_toConsumableArray","_createFields","datamodel_slicedToArray","addField","isMutableAction","getRootGroupByModel","find","propagateImmutableActions","actions","criteriaModel","sourceNamespace","actionName","eventName","measureName","binFieldName","dataSet","currfield","binField","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","Operators","operator_namespaceObject","Stats","stats_namespaceObject","version","datamodel_package","src_array_slice","d3_axis_src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","entering","__axis","axis_axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","axis","spacing","range0","range1","axis_center","axis_number","selection","path","selectAll","tick","tickExit","exit","tickEnter","enter","append","attr","line","merge","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","src_path","d3_shape_src_constant","constant","math_max","math_min","math_sqrt","math_epsilon","math_pi","halfPi","math_tau","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","point_x","point_y","defined","curve","buffer","defined0","src_area","area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","d3_shape_src_array_slice","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","monotone_sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","ascending_sum","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elastic_tau","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","Diagram_cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","Diagram_epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","edges","cells","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","makeEntry","sCon","ForeignSet","set_classCallCheck","_set","set1","set2","filteredKeys","s2","isSimpleObject","utils_typeof","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","utils_toConsumableArray","scheduler","onFinishCallback","queue","animationFrame","listeners","utils_unique","utils_fetch","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","utils_resolver","accumulate","nodeDetails","_defineProperty","identity","CustomResolver","resolver","utils_classCallCheck","dep","_dep","GraphNode","graph_node_classCallCheck","_seed","requireResolve","retriever","history","electricEdges","_edges","entry","graph_node_toConsumableArray","retrieveDetails","head","hist","ElectricNode","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","pullableRecent","nodes","nFn","pullableEnd","Graph","graph_classCallCheck","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flush","mount","resolveReqList","objn","perv","addDependencies","_node","graph_toConsumableArray","getDependencies","utils_set","getResolvedList","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","_this3","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","_this4","qnames","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","hyperdis_src","Model","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","model_toConsumableArray","model_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","HTMLElement","common_utils_isSimpleObject","common_utils_typeof","common_utils_getUniqueId","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","common_utils_getDomainFromData","getDomainFromData","domArr","firstMin","secondMin","firstMax","secondMax","symbolFns","cross","easeFns","cubic","bounce","src_linear_linear","elastic","back","poly","circleInOut","common_utils_getClosestIndexOf","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","objectIterator","common_utils_Voronoi","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","common_utils_Store","Store","_listeners","serialize","propName","propNames","callBack","on","calculatedProp","intSanitizer","common_utils_transactor","transactor","holder","_loop","common_utils_defineProperty","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","common_utils_isEqual","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","common_utils_numberInterpolator","numberInterpolator","common_utils_piecewiseInterpolator","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","common_utils_getDataModelFromIdentifiers","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","common_utils_registerListeners","registerListeners","listenerMap","propListenerMap","mapObj","propType","listenerFn","listener","isValidValue","getObjProp","common_utils_getSymbol","getSymbol","src_symbol","stackOrders","_stackOrders","stackOffsets","yp","yn","_stackOffsets","si","sij0","s3","sk","common_utils_stack","stack","oz","kz","sz","sij","ki","src_stack","pathInterpolators","curveLinear","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","xhtml","namespaces","xlink","xml","xmlns","namespace","space","local","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","selector_none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","sort_ascending","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","raise_raise","nextSibling","lower","previousSibling","firstChild","constantNull","remove_remove","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","d3_selection_src_constant","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_selection","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","dispatch_noop","dispatch_dispatch","Dispatch","dispatch_get","dispatch_set","T","dispatch_parseTypenames","types","src_dispatch","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","taskHead","taskTail","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","schedule_create","self","tween","state","duration","ease","schedule","schedule_get","schedule_set","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","src_transition_transition","children","inherit","id0","id1","onFunction","on0","on1","sit","on_start","attrTween","attr_attrFunctionNS","value00","value10","interpolate0","value1","attr_attrFunction","attr_attrRemoveNS","attr_attrRemove","attr_attrConstantNS","attr_attrConstant","attrTweenNS","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","transition_inherit","interrupt","renderer_utils_selectElement","selectElement","element","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","renderer_utils_setAttrs","setAttrs","renderer_utils_setStyles","setStyles","styles","renderer_utils_createElements","createElements","sel","renderer_utils_getClientPoint","getClientPoint","pos","clientPoint","renderer_utils_getEvent","getEvent","renderer_utils_getD3Drag","getD3Drag","renderer_utils_getSmartComputedStyle","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","DataSystem_selection","selection_classCallCheck","_data","_idMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","_this6","DataObject","data_object_classCallCheck","events","EVENT_LIST","composition","event_list","lifecycle_manager_resolver","resolveFn","notification","hasOwn","src_lifecycle_manager","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","_makeNotifierPromise","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","promise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","selection_set","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","updateSet","removeSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","muze_firebolt_src_helper_toConsumableArray","conditionsMap","newEntry","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","resetted","getModelFromSet","condition","helper_unionSets","unionSets","behaviours","combinedSet","models","behaviour","entryExitSet","_entryExitSet","common_utils_clone","existingModel","union","Firebolt","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_propagationFields","_sourceSideEffects","tooltip","selectionBox","_actionBehaviourMap","_config","_behaviourEffectMap","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","sideEffectConf","behEffectMap","firebolt_toConsumableArray","initializeBehaviouralActions","dispatchableBehaviours","Action","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","effects","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","volatileSelectionSet","_volatileSelectionSet","_selectionSet","sideEffectDefinitions","initializeSideEffects","sideEffectsMap","SideEffect","helper_initializeSideEffects","initedActions","initializePhysicalActions","physicalActions","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","renderer_utils_getElementsByClassName","propagationInf","xFields","yFields","xMeasures","yMeasures","_propModel$getData","fieldMap","common_utils_filterPropagationModel","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_firebolt$getAddSetFr","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","getSchema","generic","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","behavioural_volatile","updateEntry","mergedExitSet","completeSetCount","persistent","drag_action_config","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","drag_event_attachDragEvent","attachDragEvent","targetEl","d3Drag","boundingBox","touchStart","getSourceInfo","beh","dragEnd","physical_hover","hover","interaction","getDrawingContext","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","helpers_generatePayloadFromEvent","generatePayloadFromEvent","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","physical_click","click","physical_defineProperty","_physicalActions","longtouch","touchEnd","touchdrag","GenericSideEffect","side_effects_generic_classCallCheck","_strategy","_strategies","defaultConfig","side_effects_generic","interactionType","layers","layer","interactive","applyInteractionStyle","_drawingContext","helper_changeVisibility","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","selection_box","spawnable","boxConf","box","drawingInf","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","bandScale","x1Val","x2Val","x1DomainIndex","x2DomainIndex","_sort","_sort2","selection_box_helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort3","_sort4","_xDim","_yDim","dimension","show","points","selectionBoxDrag","onDrag","selection_box_drag_selectionBoxDrag","boxClassName","INITIAL_STYLE","default_config_defaultConfig","connectorClassName","margin","content","iconContainerSize","iconSize","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","helper_getArrowPos","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","helper_placeArrow","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","strategy_defaultTooltipFormatters","defaultTooltipFormatters","_formatters","strategy_defineProperty","formatters","nearestInterval","getNearestInterval","strategy_getNearestInterval","strategy_strategy","buildTooltipData","fieldValues","fieldspace","dimensionMeasureMap","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","measure","margin-left","allMeasures","strategy_buildTooltipData","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","strategy","ctx","_mount","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","src_content","reorderContainers","contentConf","render","_target","repositionArrow","arrowOrient","connector","_offset","scrollTop","scrollLeft","orientation","_extent","arrowDisabled","arrowSize","topSpace","positionHorizontal","dimX","rightSpace","leftSpace","positionVertical","_position","_arrowPos","strategies_strategies","showSelectedItems","aggregatedModel","fieldsConf","console","strategies_toConsumableArray","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","layoutBoundBox","unitBoundBox","tooltipInst","src_tooltip","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","bottom","bandWidth","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","CLASSPREFIX","strategy_strategies","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","surrogate","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","_layers","addAnchorLayers","shouldDrawAnchors","encodingFieldsInf","anchors_toConsumableArray","addLayer","alias","mark","encoding","colorField","sizeField","defaultSizeValue","getTransitionConfig","calculateDomain","anchorGroups","side_effects_anchors","behaviour_effect_map_behaviourEffectMap","behaviour_effect_map_defineProperty","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","area_default_config_defaultConfig","nearestPointThreshold","strokeOpacity","connectNullData","group_transform","groupByIndices","nestCollection","nestFn","common_utils_nestCollection","transformMap","transform_factory_defineProperty","identityTransform","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","stack_transform_normalizeData","stackData","seriesData","transform_factory","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","getRawColor","getHslString","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","helpers_applyInteractionStyle","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","helpers_getAxesScales","getAxesScales","_map","_map2","_map3","_map4","xScale","yScale","attachDataToVoronoi","helpers_toConsumableArray","helpers_updateStyle","updateStyle","positionPoints","positioner","encodingTransform","_dependencies","listener_map_listenerMap","dataModelValue","configValue","encodingValue","getEncodingFieldInf","_map5","_map6","x0Field","y0Field","shapeField","_map7","_map8","_map9","_map10","xFieldSubType","yFieldSubType","_map11","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","helpers_getEncodingFieldInf","transformType","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","helpers_getValidTransform","getTransformedData","transformedData","transformedDataValue","getNormalizedData","normalizedDataValue","calculateDomainFromData","throwback","commit","defaultOptions","default_options_defineProperty","oldConfig","newConf","defaultPolicy","_defaultOptions","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","DATA","_points","_measurement","simple_layer","_store","_encodingFieldsInf","_encodingTransform","_alias","transformData","helpers_transformData","domains","yEnc","xEnc","helpers_calculateDomainFromData","encodingType","transformedDataArr","fieldsLen","pointObj","helpers_getNormalizedData","_transformType","unsubscribeAll","pointMap","_pointMap","_dataProps","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","userConf","renderer_line","renderer_drawLine","drawLine","curveInterpolatorFn","linepath","line_default_config_defaultConfig","LineLayer","line_classCallCheck","line_possibleConstructorReturn","base_layer","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","cachePoint","seriesClassName","containerSelection","colorFieldMeasure","animateGroup","groupTransition","groupAnimateStyle","helpers_animateGroup","stroke-opacity","getPathStyle","translatePoints","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","renderer_area","renderer","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","line_line","_getAxesScales","y0Px","arc_default_config_defaultConfig","minOuterRadius","stroke-width","stroke-linejoin","angle","innerRadiusFixer","states","enums_constants_CLASSPREFIX","fadeout","selected","arc_helper_tweenPie","tweenPie","prevData","uid","prevDatum","getIndexedPoint","currIndex","prevArc","nextArc","prevObject","common_utils_interpolator","arc_pie","arc_arc","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","_prevPieData","pieData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","arc_helper_getFieldIndices","dataVal","sizeVal","outerRadiusValue","colorVal","angleVal","_dataPoint$datum","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","text_renderer","drawText","backgroundPadding","selectionMerge","background","textanchor","backgroundEnabled","_smartLabel$getOriSiz","backgroundEl","textNode","text_default_config_defaultConfig","enabled","textEncoding","textField","textFormatter","backgroundField","backgroundFieldIndex","textFieldIndex","textValue","text_slicedToArray","text-anchor","point_renderer","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","then","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","renderer_createShape","exitGroups","point_default_config_defaultConfig","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","sizeEncoding","shapeEncoding","shapeFieldIndex","sizeFieldIndex","point_slicedToArray","maxSize","point_toConsumableArray","drawFn","_maxSize","distanceLimit","renderer_drawRects","drawRects","barEnterFn","transitionBars","classnameFn","selTransition","renderer_transitionBars","bar_default_config_defaultConfig","innerPadding","axis_orientation_BOTTOM","axis_orientation_TOP","axis_orientation_LEFT","axis_orientation_RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","LINEAR","BAND","TIME","scale_type_COLOR","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","scale_type_IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","constants_SEQUENTIAL","constants_ORDINAL","constants_LINEAR","constants_QUANTIZE","HIDDEN","scaleLinear","scales_namespaceObject","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleBand","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","scale_creator_createScale","scaleFactory","cartesian_axis_default_config_defaultConfig","axisName","axisNamePadding","src_enums_constants_CLASSPREFIX","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","axis_renderer_rotateAxis","rotateAxis","instance","tickText","labelManager","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","axis_renderer_changeTickOrientation","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","axis_renderer_setFixedBaseline","setFixedBaseline","axis_renderer_setAxisNamePos","setAxisNamePos","axisNameHeight","labelOffset","availableSpace","getTickLabelInfo","largestLabel","labelProps","smartTick","axisTickLabels","allLabelLengths","_context$config","labelFunc","_tickLabelStyle","originalLabel","formattedLabel","largestLabelDim","helper_setOffset","setOffset","logicalSpace","helper_adjustRange","adjustRange","getAxisOffset","timeDiff","avWidth","bars","registerChangeListeners","_domainLock","getHorizontalAxisSpace","axisDimensions","axisLabelDim","axisDimHeight","tickDimHeight","tickDimWidth","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","_minTickDistance","getVerticalAxisSpace","PROPS","_rotationLock","createAxis","SimpleAxis","simple_axis_classCallCheck","_range","_domain","_axisDimensions","defCon","simpleConfig","bodyElem","_axisNameStyle","_scale","createScale","_axis","setTickConfig","axisClass","labelWidth","domainVal","computeAxisDimensions","_context$config2","_getTickLabelInfo","labelHeight","setRotationConfig","calculateContinousSpace","getAxisDimensions","axisDimWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","helper_calculateContinousSpace","currentDomain","updateDomainBounds","registerEvent","renderAxis","setTickValues","axisNameSpace","axisNameWidth","interpolatorMap","continous_axis_defineProperty","interpolators_log","_interpolatorMap","interpolators_pow","interpolators_linear","simple_axis","InterpolatorCls","_interpolator","sanitizeDomain","isOffset","_config3","labelSpace","axisHeight","getLogicalSpace","axisWidth","getTickValues","_config5","getNumberOfTicks","labelDim","tickLength","numberOfValues","getSmallestDiff","_config6","_axisDimensions$large","band_axis_get","_config2","calculateBandSpace","largestDimHeight","largestDimWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","helper_calculateBandSpace","availSpace","smartWidth","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","_minDiff","time_axis_get","_getAxisDimensions","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_CONFIG","stops","props_getHslString","hslArr","convertToXllString","baseString","props_getActualHslColor","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","props_PROPS","newConfig","uniqueValues","color_strategy_getStops","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","maxRangeLength","rangeCycles","color_strategy_piecewiseDomain","piecewiseDomain","retDomain","hslValues","hslInterpolator","common_utils_hslInterpolator","scaleDomain","indexedDomain","indexedDomainMeasure","normalDomain","color_strategy_steppedDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","domainValue","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","strategies","color_strategy_defineProperty","domainRange","color_strategy_strategies","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","colorStrategy","getScheme","color_schemes_namespaceObject","hslColorArray","rgbArr","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","defaults_DEFAULT_CONFIG","size_strategy_strategies","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","size_axis_props_PROPS","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","updateDomain","size_strategy_strategyGetter","domainInfo","domainFn","shape_axis_defaults_DEFAULT_CONFIG","generator","shape_axis_props_PROPS","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","bar_helper_BAND","data_type_scale_map_defineProperty","dataTypeScaleMap","_dataTypeScaleMap","scale_type_namespaceObject","bar_helper_resolveDimByField","resolveDimByField","axesInfo","spaceType","sizeConfig","sizeValue","enterSpace","minVal","maxVal","scales","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","getBarMeasurement","offsetValues","actualGroupWidth","groupWidth","getGroupWidth","isAxisBandScale","axisPadding","groupPadding","bar_scaleBand","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","_bandScale","bar_get","getTranslatedPoints","_context$encodingFiel","bar_helper_getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","renderer_utils_clipElement","generateDataPoints","individualClassName","fieldInfo","dataProps","timeDiffs","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","_plotSpan","_plotPadding","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_default_config_defaultConfig","tick_renderer","ticksEnter","point_point","xbandwidth","ybandwidth","x0Px","sanitizeEncoding","layer_factory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","layerDef","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","layer_factory_parseLayerDefinition","getLayerInstance","layerRegistry","instances","layerObj","composeLayers","layerDefs","DEFAULT_LAYERS","defaults_defineProperty","area_area","_DEFAULT_LAYERS","layers_arc_arc","text_text","tick_tick","bar","ROWS","COLUMNS","COL","ROW","enums_constants_COLOR","enums_constants_SHAPE","enums_constants_SIZE","constants_LEFT","constants_RIGHT","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","constants_RADIUS","constants_ANGLE","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","simple_group","composed_vars","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","vars","variable_variable","_vars","member","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","oneVar","_oneVar","field_sanitizer_convertToVar","convertToVar","simple_var","field_sanitizer_transformFields","transformFields","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","field_sanitizer_orderFields","field_sanitizer_slicedToArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom","group_utils_getHeaderAxisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","rowHeader","rowAxis","_getHeaderAxisFrom3","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","continous_axis","band_axis","time_axis","size_axis","color_axis","shape_axis","data_type_scale_map_dataTypeScaleMap","encoder_helper_createSimpleAxis","createSimpleAxis","axisConfig","axesCreators","Cls","encoder_helper_generateAxisFromMap","generateAxisFromMap","groupAxes","axisKey","currentAxes","cacheMaps","getAxisKey","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","axis_orientation_namespaceObject","LEFT","RIGHT","TOP","BOTTOM","encoder_helper_getAxisConfig","encoder_helper_slicedToArray","getIndex","arrIndex","visual_encoder","geomCellAxes","projections","indices","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","CartesianEncoder","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","encoder_helper_getDefaultMark","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","cartesian_encoder_toConsumableArray","pieAxes","sanitizedRows","sanitizedColumns","polar_encoder_get","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","parentModel","layerEncoding","encType","measureField","polar_encoder_defineProperty","newAxes","createRetinalAxis","fieldProps","group_utils_getAxisType","encoder_helper_createRetinalAxis","encodingConfigs","enc","group_utils_initStore","initStore","group_utils_defineProperty","group_utils_isDistributionEqual","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","scaleType","group_utils_headerCreator","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getAxisType","getHeaderAxisFrom","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_createSelection","createSelection","appendObj","idFn","dataSelect","mergedSelection","group_utils_getBorders","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","group_utils_getValueBorders","action_behaviour_map_defineProperty","actions_namespaceObject","behaviours_namespaceObject","reactive_props_CONFIG","reactive_props_DATA","reactive_props_AXES","LAYERDEFS","reactive_props_WIDTH","reactive_props_HEIGHT","reactive_props_MOUNT","primaryXAxisUpdated","primaryYAxisUpdated","secondaryXAxisUpdated","secondaryYAxisUpdated","reactive_props_TRANSFORM","DATADOMAIN","LAYERSCREATED","FIELDS","TIMEDIFFS","LAYERAXISINDEX","helper_getLayerFromDef","getLayerFromDef","existingLayer","_layerDeps","instanceArr","helper_createLayers","createLayers","layerDefinitions","layersMap","_layersMap","markSet","components","layersArr","_layersArr","markId","instanceValues","visual_unit_src_helper_toConsumableArray","layerdeps","resolvable","depArr","getDependencyOrder","dependencyOrder","visited","visit","helper_attachAxisToLayers","attachAxisToLayers","layerAxisIndex","axesObj","axisInf","helper_getLayerAxisIndex","getLayerAxisIndex","_layer$config","helper_unionDomainFromLayers","unionDomainFromLayers","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","unionDomain","dom","common_utils_unionDomain","getLayersBy","searchBy","removeLayersBy","inst","grid_lines_LINEAR","grid_lines_getGridLayerDefinitions","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","grid_lines_renderGridLineLayers","renderGridLineLayers","createGridLineLayer","vuConf","_gridbands","_gridlines","atomicDef","sConf","grid_lines_createGridLineLayer","getGridLayerData","gridData","_jsonData$push","grid_lines_getGridLayerData","_entry","grid_lines_slicedToArray","parentGroupClass","src_default_config_defaultConfig","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$AXE","prevAxes","cachedData","local_options_toConsumableArray","axisMap","1","axisProps","src_listener_map_listenerMap","listener_map_slicedToArray","reactive_props_namespaceObject","isReverse","layerDefsValue","fieldsVal","_layerAxisIndex","_lifeCycleManager","notify","layersCreated","dataModelVal","layerAxisIndexVal","axesVal","transformDataModels","transformVal","_transformedDataModels","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","helper_getDimensionMeasureMap","retinalFields","dataDomain","updateAxisDomain","src_props_PROPS","props_defineProperty","_PROPS","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","helper_registerListeners","registerImmediateListener","originalData","createSelectionSet","attachPropagationListener","registerChangeListener","firebolt_helper_slicedToArray","mapActionsAndBehaviour","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldObj","isDimension","payload_generator_toConsumableArray","payload_generator_getRangeFromData","__default","data_propagator_propagateValues","propagateValues","propagationFields","mutableEffect","data_propagator_toConsumableArray","mergedModel","sourceUnit","sourceCanvas","parentAlias","criteriaFields","addToPropNamespace","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","src_firebolt","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","actionOnSource","mappedEffects","se","applyOnSource","payloadFn","sourceIdentifierFields","propFields","firebolt_get","VisualUnit","registry","visual_unit_classCallCheck","onlayerdraw","_renderedResolve","_renderedPromise","lifeCycleManager","visual_unit_defineProperty","visual_unit_src_firebolt","behavioural_namespaceObject","side_effects_namespaceObject","_firebolt","lock","unlock","_rootSvg","class","renderLayers","orderedLayers","layerParentGroup","helper_renderLayers","_sideEffectGroup","createSideEffectGroup","helper_createSideEffectGroup","rootSvg","layerName","getLayerByName","serializedDef","visual_unit_toConsumableArray","lyr","axisConf","alignZeroLine","adjustedDomain","getAdjustedDomain","y1ratio","y2ratio","allSameSign","updateDomainCache","dimValue","getNearestDimensionalValue","entryVal","helper_getNearestDimensionalValue","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","_parentContainer","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","matrix_model_uniqueKeyGenerator","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames3","_getFieldNames4","rowProjFieldNames","projectedDm","cell_creator_createValueCells","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","rowId","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","facetByFields","updateCells","facetKey","cell_creator_updateCells","cell_creator_createAxisCells","createAxisCells","axisInst","AxisCell","BlankCell","cell_creator_headerPlaceholderGn","headerPlaceholderGn","selectionObj","facetConfig","selectionKeys","keySet","createTextCells","cell_creator_createTextCells","cell_creator_generatePlaceholders","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","cell_creator_axisPlaceholderGn","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","cell_creator_computeMatrices","computeMatrices","componentRegistry","globalConfig","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","group_utils_extractFields","getFieldsFromSuppliedLayers","suppliedLayerConfig","group_utils_getFieldsFromSuppliedLayers","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","_getFieldNames5","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","matrix_model_getMatrixModel","valueCellsCreator","placeholder","createUnits","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","group_utils_mutateAxesFromMap","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","_rowCells","_colCells","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","units","unitConfig","extractUnitConfig","group_utils_extractUnitConfig","visual_unit","_getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_axes2","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","footers","topLeft","topRight","value_matrix","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","rowHeight","currentRowHeight","change_listener_setupChangeListeners","setupChangeListeners","change_listener_toConsumableArray","matrixConfig","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","retinal_encoder","getEncoder","cartesian_encoder","polar_encoder","group_utils_getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","setMatrixInstances","_composition","change_listener_setMatrixInstances","cornerMatrices","createHeaders","metaData","border","visual_group_props_PROPS","hasDataUpdated","matrixInstance","cellRegistry","visual_group","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","componentSubRegistry","_matrixInstance","_selection","_placeholderInfo","_cornerMatrices","matrix_resolver","variable","findInGroup","channel","group_utils_this","facetType","projType","group_utils_findInGroup","getRetinalAxes","getSimpleAxes","_resolver$getAllField","visual_group_defineProperty","existingRemoveSet","enums_selection_namespaceObject","select_toConsumableArray","firebolt_action_behaviour_map_actionBehaviourMap","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","src_firebolt_behaviour_effect_map_behaviourEffectMap","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","helper_propagate","check","assembleModelFromIdentifiers","_loop2","cIdx","src_firebolt_helper_toConsumableArray","legend_firebolt_LegendFireBolt","_Firebolt","LegendFireBolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","firebolt_physical_hover","getCriteriaFromData","firebolt_physical_click","firebolt_physical_physicalActions","firebolt_physical_defineProperty","physical_physicalActions","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","side_effects_selection_box","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","physical_selection_box_drag_selectionBoxDrag","legend_highlighter_strategies_strategies","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_props_PROPS","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","legend_defaults_DEFAULT_CONFIG","bounds","upper","defaults_ICON_MAP","ICON_MAP","legend_helper_getScaleInfo","getScaleInfo","steps","scaleFn","legend_helper_getInterpolatedData","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","firebolt_behavioural_namespaceObject","firebolt_side_effects_namespaceObject","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","itemSpace","iconSpace","legend_helper_computeItemSpaces","titleSpaces","_measurement2","titleCreator","legend_helper_titleCreator","_measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","_legendOrientation","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","renderer_applyItemStyle","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderer_renderIcon","renderIcon","renderer_createLegendSkeleton","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","renderer_getItemContainers","renderer_createItemSkeleton","createItemSkeleton","itemSkeleton","alignClass","renderer_renderDiscreteItem","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getLegendIcon","defaultIcon","renderer_getLegendIcon","simple_legend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","DiscreteLegend","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","gradient_helper_createLegendSkeleton","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","gradient_helper_makeLinearGradient","legendRect","gradient_helper_renderAxis","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","gradient_helper_createAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","renderGradient","_createLegendSkeleton","gradient_helper_renderGradient","GradientLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","StepLegend","stepData","position_config_stepData","renderStepItem","_context$config3","_context$measurement3","_item$icon2","_positionConfig$posit","renderer_renderStepItem","PADDING","BORDER","src_constants_CONFIG","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","src_constants_ORDINAL","discrete_legend","_LEGEND_TYPE_MAP","src_constants_LINEAR","step_legend","gradient_legend","operators_share","share","operators_toConsumableArray","operators_html","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","canvas","once","visualGroup","_cell$valueOf$firebol","dissociateBehaviour","src_defaults_DEFAULT_CONFIG","legend","showHeaders","minHeight","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","VIEW_INDEX","center","enums_constants_WIDTH","enums_constants_HEIGHT","layout_src_enums_constants_TOP","src_enums_constants_LEFT","src_enums_constants_RIGHT","layout_src_enums_constants_BOTTOM","constants_CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_FieldNames$BORDER","_DEFAULT_CONFIGURATIO","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","span_maker_columnFilter","columnFilter","colData","colIdx","rIdx","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","span_maker_mask","mask","filteredRow","colIndex","_temp","span_maker_toConsumableArray","applyBorders","borderStyle","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","cellSpanMaker","viewMatrix","spans","ridx","currSpan","viewWidth","viewHeight","renderTable","rowData","table","availHeight","span","splitMatrices","utils_nest","findInPage","page","combineMatrices","isTransposed","joinedMatrix","src_utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","utils_getMeasureInfo","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","utils_getLogicalSpace","extraCellsRemover","beg","visual_matrix_props_PROPS","visual_matrix_default_config_defaultConfig","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_breakPointer","_layoutMatrix","_tree","createTree","setLogicalSpace","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","utils_createTree","createMatrixEachLevel","_arr$i","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistribute","childDepth","maxHeights","maxWidths","matrixInst","mWidth","mHeight","redistributeColumnWise","redistributeRowWise","cellDimOptions","matrixIndex","_getCellDimensions","getCellDimensions","heights","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","createMatrixInstances","matrixInfo","layout","breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","rHeights","cWidths","_config4","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","borderWidth","spaceTakenByRow","getDistributedWidth","layoutConfig","availableWidth","rowLen","oldLogicalSpace","mainMeasures","computedMeasures","colHeight","colWidth","setMatrixMeasurement","computations_setAvailableSpace","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","_layoutId","generic_layout","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","visual_matrix","centerMatrix","layout_helper_generateVisualMatrices","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","columnMatrixWidth","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","computations_computeLayoutMeasurements","setViewInformation","pageNumber","pageType","totalPages","getViewInformation","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableData","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$measurement2","_layout$config3","leftWidth","rightWidth","topHeight","bottomHeight","viewInfo","_getViewInformation3","renderMatrices","newCenter","newBottom","newTop","breakLength","topBreak","bottomBreak","INTERFACE_IMPl","visual_cell_src_enums_constants_LEFT","visual_cell_src_enums_constants_RIGHT","visual_cell_src_enums_constants_BOTTOM","visual_cell_src_enums_constants_TOP","visual_cell_src_enums_constants_CLASSPREFIX","constants_HEADER","enums_constants_DATA","enums_constants_AXES","constants_FACET_BY_FIELDS","constants_FIELDS","enums_constants_TRANSFORM","LAYER_DEF","src_enums_constants_CONFIG","cell_type_TEXT","cell_type_AXIS","GEOM","BLANK","simple_cell","SimpleCell","simple_cell_classCallCheck","enums_defaults_DEFAULT_CONFIG","enums_defaults_defineProperty","_CONSTANTS$MARGIN","_DEFAULT_CONFIG","DEFAULT_PROPS","availWidth","geomProps","caption","packages_visual_cell_src_props_PROPS","src_props_defineProperty","visual_cell_src_props_PROPS","axis_cell","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","_availHeight","_availWidth","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","wrapperDiv","blank_cell","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","src_text_cell","text_cell_classCallCheck","text_cell_possibleConstructorReturn","_className","_minTickDiff","computeTextSpace","verticalAlign","textAlign","geom_cell","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","_unit","_datamodel","_facetByFields","_transform","_caption","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","cell_registry","createHeading","cellType","title_maker_headerCreator","legend_maker_legendInitializer","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","legend_maker_legendCreator","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","layout_maker_BlankCell","createBlankCell","fillArray","blankMatrixCreator","blankCellCreator","maxRows","rowMatrixIndex","numberOfRows","layout_maker_toConsumableArray","prepareLayout","topL","topR","bottomL","bottomR","getMaxRows","colLengths","_blankCellCreator","_blankCellCreator2","layout_maker_slicedToArray","_blankCellCreator3","_blankCellCreator4","triggerReflow","layout_maker_getRenderDetails","getRenderDetails","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","legendLayouts","component_resolver_defineProperty","titleLayouts","src_constants_TOP","src_constants_BOTTOM","component_resolver_arrangeComponents","_mount$getBoundingCli","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","_sanitize","escapeHTML","htmlEscapes","&","<",">","\"","'","/","title_maker_resolveTitleSubTitleContent","_createHeading","title_maker_createHeaders","createLegend","legend_maker_createLegend","legendSpace","getLegendSpace","legendInfo","legend_maker_getLegendSpace","legendWidth","legendHeight","canvases","mountSpace","TITLE_CONFIG","SUB_TITLE_CONFIG","localOptions","canvas_local_options_defineProperty","_localOptions","canvasOptions","_sanitized","_canvasOptions","sub","renderer_renderHeader","renderHeader","headerCell","cont","renderComponents","_getSkeletons","getSkeletons","layoutType","renderer_getSkeletons","prepareGridContainer","renderer_prepareGridContainer","setLabelRotationForAxes","renderLegend","legendComponents","sectionComponents","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","renderer_renderLegend","shiftHeaders","shifter","renderer_shiftHeaders","GroupFireBolt","canvas_firebolt_classCallCheck","helper_setupChangeListener","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","equalityChecker","option","dispatchProps","_cachedProps","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","grid_layout_layout","canvas_firebolt","_transactor","canvas_slicedToArray","transaction_support","initedComponents","initCanvas","register","_getRenderDetails","promises","all","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze_muze","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","canvas_canvas","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","common_utils_slicedToArray","SmartlabelManager_default","SideEffects","concrete","abstract","SurrogateSideEffect","SpawnableSideEffect","pkg","muze_package","layerFactory","operators","operators_namespaceObject","utils","require","lookupWhat","lookupDetails","lookupTarget","deps","__webpack_exports__"],"mappings":"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iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENkB,GAAeT,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENmB,GAAeV,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENoB,GAAeX,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENqB,GAAeZ,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENsB,GAAeb,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCANuB,GAAed,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENwB,GAAef,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENyB,GAAehB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN0B,GAAejB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN2B,GAAelB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN4B,GAAenB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN6B,GAAepB,GAVK,IAAI15B,M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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onlayerdraw'\n};\n\nexport default CommonProps;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import { DimensionSubtype } from '../enums';\nimport { rowDiffsetIterator } from '../operator/row-diffset-iterator'\n;\n\nexport default class Field {\n    constructor(partialFeild, rowDiff) {\n        this._ref = partialFeild;\n        this._rowDiff = rowDiff;\n    }\n\n    sanitize () {\n        return this._ref.sanitize();\n    }\n\n    parsed (val) {\n        return this._ref.parsed(val);\n    }\n\n    domain() {\n        let data = [];\n        let domain = null;\n        data = this.getData();\n        if (this._ref.fieldType === 'dimension' && this._ref.subType() !== DimensionSubtype.TEMPORAL) {\n            domain = [...new Set(data)];\n        } else {\n            let minD = Math.min.apply(null, data);\n            let maxD = Math.max.apply(null, data);\n            domain = [minD, maxD];\n        }\n\n        return domain;\n    }\n\n    parse (val) {\n        return this._ref.parse(val);\n    }\n\n\n    clone(datas) {\n        return this._ref.clone(datas);\n    }\n\n    fieldName() {\n        return this._ref.fieldName();\n    }\n\n    type() {\n        return this._ref.type();\n    }\n\n    description() {\n        return this._ref.description();\n    }\n\n    get name() {\n        return this._ref.name;\n    }\n\n    // set name(name) {\n    //     this._ref.name = name;\n    // }\n\n    get schema() {\n        return this._ref.schema;\n    }\n\n    // set schema(schema) {\n    //     this._ref.schema = schema;\n    // }\n\n    get data() {\n        return this._ref.data;\n    }\n\n    // set data(schema) {\n    //     throw new Error('Not yet implemented!');\n    // }\n\n    subType() {\n        return this._ref.subType();\n    }\n\n    getMinDiff () {\n        return this._ref.getMinDiff();\n    }\n\n    /**\n     * Getter for unit value of the field.\n     *\n     * @return {string} Returns unit of the field.\n     */\n    unit() {\n        return this._ref.unit();\n    }\n\n    /**\n     * Getter for scale value of the field.\n     *\n     * @return {string} Returns scale of the field.\n     */\n    scale() {\n        return this._ref.scale();\n    }\n\n    /**\n     * Getter for aggregation function of the field.\n     *\n     * @return {Function} Returns aggregation function of the field.\n     */\n    defAggFn() {\n        return this._ref.defAggFn();\n    }\n\n    getData() {\n        let data = [];\n        rowDiffsetIterator(this._rowDiff, (i) => {\n            data.push(this._ref.data[i]);\n        });\n        return data;\n    }\n\n    bins() {\n        return this._ref.bins();\n    }\n}\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultNumberParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n\n                return DateTimeFormatter.defaultNumberParser()(val);\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\nexport const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function formatNumber(val) {\n    return val;\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n            fieldsObj () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    retObj[field.name] = field;\n                });\n                return retObj;\n            },\n            getMeasure () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema.type === FieldType.MEASURE) {\n                        retObj[field.name] = field;\n                    }\n                });\n                return retObj;\n            },\n            getDimension () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema.type === FieldType.DIMENSION) {\n                        retObj[field.name] = field;\n                    }\n                });\n                return retObj;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\n/**\n * Creates bin f from the data and the supplied config.\n *\n * @param {Array} data - The input data.\n * @param {Object} config - The config object.\n * @param {number} config.binSize - The size of the bin.\n * @param {number} config.numOfBins - The number of bins to be created.\n * @return {Array} Returns an array of created bins.\n */\nexport function createBinnedFieldData (field, rowDiffset, config) {\n    let { buckets, numOfBins, binSize, start } = config;\n    let dataStore = [];\n    let binnedData = [];\n    let [min, max] = field.domain();\n    let oriMax = max;\n    let end = [];\n    let binEnd;\n    let prevEndpoint;\n    let mid;\n    let range;\n\n    // create dataStore with index according to rowDiffSet\n    rowDiffsetIterator(rowDiffset, (i) => {\n        dataStore.push({\n            data: field.data[i],\n            index: i\n        });\n    });\n\n    // create buckets if buckets not given\n    if (!buckets) {\n        max += 1;\n        binSize = binSize || (max - min) / numOfBins;\n\n        const extraBinELm = (max - min) % binSize;\n        if (!numOfBins && extraBinELm !== 0) {\n            max = max + binSize - extraBinELm;\n        }\n        binEnd = min + binSize;\n        while (binEnd <= max) {\n            end.push(binEnd);\n            binEnd += binSize;\n        }\n        start = start || min;\n        buckets = { start, end };\n    }\n\n    // initialize intial bucket start\n    prevEndpoint = buckets.start === 0 ? 0 : buckets.start || min;\n\n    // mark each data in dataStore to respective buckets\n    buckets.end.forEach((endPoint) => {\n        let tempStore = dataStore.filter(datum => datum.data >= prevEndpoint && datum.data < endPoint);\n        tempStore.forEach((datum) => { binnedData[datum.index] = `${prevEndpoint}-${endPoint}`; });\n        prevEndpoint = endPoint;\n    });\n\n    // create a bin for values less than start\n    dataStore.filter(datum => datum.data < buckets.start)\n                    .forEach((datum) => { binnedData[datum.index] = `${min}-${buckets.start}`; });\n\n    // create a bin for values more than end\n    dataStore.filter(datum => datum.data >= buckets.end[buckets.end.length - 1])\n                    .forEach((datum) =>\n                    { binnedData[datum.index] = `${buckets.end[buckets.end.length - 1]}-${oriMax}`; });\n\n    // create range and mid\n    // append start to bucket marks\n    buckets.end.unshift(buckets.start);\n    range = new Set(buckets.end);\n\n    // Add endpoints to buckets marks if not added\n    if (min < buckets.start) { range.add(min); }\n    if (oriMax > buckets.end[buckets.end.length - 1]) { range.add(oriMax); }\n\n    range = [...range].sort((a, b) => a - b);\n    mid = [];\n\n    for (let i = 1; i < range.length; i++) {\n        mid.push((range[i - 1] + range[i]) / 2);\n    }\n    return { data: binnedData, mid, range };\n}\n","/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/* eslint-disable default-case */\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * iterate the children and call the callback for each\n *\n * @param {DataModel} datamodel\n * @param {function} callback\n * @param {DM_DERIVATIVES} operation\n */\nfunction childIterator (datamodel, callback, operation) {\n    const children = datamodel._children;\n    children.forEach((child) => {\n        if (child._derivation\n            && child._derivation.length === 1) {\n            switch (operation) {\n            case DM_DERIVATIVES.SELECT:\n                if (child._derivation[0].op === DM_DERIVATIVES.SELECT) {\n                    callback(child, child._derivation[0].criteria);\n                }\n                break;\n            case DM_DERIVATIVES.PROJECT:\n                if (child._derivation[0].op === DM_DERIVATIVES.PROJECT) {\n                    callback(child, child._derivation[0].meta.actualProjField);\n                }\n                break;\n            case DM_DERIVATIVES.GROUPBY:\n                if (child._derivation[0].op === DM_DERIVATIVES.GROUPBY) {\n                    callback(child,\n                        { groupByString: child._derivation[0].meta.groupByString,\n                            reducer: child._derivation[0].criteria });\n                }\n                break;\n            case DM_DERIVATIVES.CAL_VAR:\n                if (child._derivation[0].op === DM_DERIVATIVES.CAL_VAR) {\n                    let params = [child._derivation[0].meta.config, [child._derivation[0].meta.fields,\n                        child._derivation[0].criteria]];\n                    callback(child, ...params);\n                }\n                break;\n            }\n        }\n    });\n}\n\n/**\n * Invokes a callback for every child created by a selection operation on a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each child. The parameters\n * provided to the callback are the child DataModel instance and the selection\n * function used to create it.\n */\nexport function selectIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.SELECT);\n}\n\n/**\n * Invokes a callback for every measure child of a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each measure child. The parameters\n * provided to the callback are the child DataModel instance and the child params.\n */\nexport function calculatedVariableIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.CAL_VAR);\n}\n\n/**\n * Invokes a callback for every projected child of a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each projected child. The parameters\n * provided to the callback are the child DataModel instance and the\n * projection string.\n */\nexport function projectIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.PROJECT);\n}\n\n/**\n * Invokes a callback over the children created by a groupBy\n * operation on a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked. The parameters\n * provided to the callback are the child DataModel instance and the groupBy string used to create it.\n */\nexport function groupByIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.GROUPBY);\n}\n\n","export const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n\n/**\n *\n * Operator Wrappers for :\n * select,project,bin,groupby\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\nexport const select = (...args) => dm => dm.select(...args);\n\nexport const project = (...args) => dm => dm.project(...args);\n\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema.name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema.name) !== -1) {\n            retArr.push(field.schema.name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema);\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema);\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.data[i]);\n                userArg[dm1FieldStoreName][field.name] = field.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema.name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name] = field.data[ii];\n            });\n            if (applicableFilterFn(userArg)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            }\n            else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, name);\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { FieldType, DimensionSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case FieldType.MEASURE:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema);\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../index';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema));\n        schemaNameArr.push(field.schema.name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, name);\n}\n\n","/**\n * reducer function that takes care about the sum aggregation\n * @param  {Array} arr array of values\n * @return {number}     sum of the array\n */\nfunction sum (arr) {\n    let allNulls = true;\n    const isNestedArray = arr[0] instanceof Array;\n    const sumVal = arr.reduce((carry, a) => {\n        if (isNestedArray) {\n            return carry.map((x, i) => x + a[i]);\n        }\n        allNulls = allNulls && (a === null);\n        return carry + a;\n    }, isNestedArray ? Array(...Array(arr[0].length)).map(() => 0) : 0);\n    return allNulls ? null : sumVal;\n}\n\n/**\n * reducer function that takes care about the mean aggregation\n * @param  {Array} arr array of values\n * @return {number}     mean of the array\n */\nfunction avg (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length || 1;\n    const arrSum = sum(arr);\n    if (isNestedArray) {\n        return arrSum.map(x => x / len);\n    }\n    return arrSum === null ? null : arrSum / len;\n}\n\n/**\n * reducer function that gives the min value\n * @param  {Array} arr array of values\n * @return {number}     min of the array\n */\nfunction min (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.min(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.min(...arr);\n}\n\n/**\n * reducer function that gives the max value\n * @param  {Array} arr array of values\n * @return {number}     max of the array\n */\nfunction max (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.max(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => -Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.max(...arr);\n}\n\n/**\n * reducer function that gives the first value\n * @param  {Array} arr array of values\n * @return {number}     first value of the array\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * reducer function that gives the last value\n * @param  {Array} arr array of values\n * @return {number}     last value of the array\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * reducer function that gives the count value\n * @param  {Array} arr array of values\n * @return {number}     count of the array\n */\nfunction count (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length;\n    if (isNestedArray) {\n        return Array(...Array(arr[0].length)).map(() => len);\n    }\n    return len;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nexport {\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    defaultReducer (...params) {\n        if (params.length) {\n            let reducer = params[0];\n            if (typeof reducer === 'function') {\n                this.store.set('defReducer', reducer);\n            } else if (typeof reducer === 'string') {\n                if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                    this.store.set('defReducer', fnList[reducer]);\n                }\n            }\n            return this;\n        }\n\n        return this.store.get('defReducer');\n    }\n\n    register (name, reducer) {\n        if (typeof name === 'string' && typeof reducer === 'function') {\n            this.store.set(name, reducer);\n        }\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function() {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../index';\nimport reducerStore from '../utils/reducer-store';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getPartialFieldspace();\n    const dimensions = fieldStore.getDimension();\n    const measures = fieldStore.getMeasure();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    Object.entries(measures).forEach(([key]) => {\n        if (measures[key].subType() === 'discrete') {\n            if (fieldArr && fieldArr.length) {\n                if (fieldArr.indexOf(key) !== -1) {\n                    retArr.push(key);\n                }\n            } else {\n                retArr.push(key);\n            }\n        }\n    });\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const pReducers = reducers;\n    const fieldStore = dataModel.getPartialFieldspace();\n    const measures = fieldStore.getMeasure();\n    let reducer = reducerStore.defaultReducer();\n    if (typeof reducers === 'function') {\n        reducer = reducers;\n    }\n    Object.entries(measures).forEach(([key]) => {\n        if (typeof reducers[key] === 'string') {\n            pReducers[key] = reducerStore.resolve(pReducers[key]) ? reducerStore.resolve(pReducers[key]) : reducer;\n        }\n        if (typeof reducers[key] !== 'function') {\n            pReducers[key] = undefined;\n        }\n        retObj[key] = pReducers[key] || reducerStore.resolve(measures[key].defAggFn()) || reducer;\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getPartialFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema));\n            if (value.schema.type === 'measure' && value.schema.subtype !== 'discrete') {\n                measureArr.push(key);\n            } else if (value.schema.type === 'dimension' || value.schema.subtype === 'discrete') {\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].data[i]);\n            });\n        }\n    });\n    // reduction\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_]);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, dbName);\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (obj) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (obj[dm1FieldStoreName][fieldName] ===\n                obj[dm2FieldStoreName][fieldName] && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import DataModel from '../index';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema));\n        schemaNameArr.push(field.schema.name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, name);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { extend2 } from '../utils';\n\n /**\n  * The base class for every field type.\n  * It provides some common functionalities.\n  */\nclass PartialField {\n\n    /**\n     * Sets basic setups to each Field instance.\n     *\n     * @param {string} name - The name or identifier of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema of the data type.\n     */\n    constructor(name, data, schema) {\n        this.name = name;\n        this.data = data || [];\n        this.schema = schema;\n        this.fieldDescription = schema.description;\n        this.fieldType = schema.type;\n        this.sanitize();\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @return {PartialField} - Returns the instance of the current context for chaining.\n     */\n    sanitize () {\n        this.data = this.data.map(d => this.parsed(this.parse(d)));\n        return this;\n    }\n\n    /**\n     * The post parsing hook for field instance.\n     *\n     * @param {*} val - The value to be parsed.\n     * @return {*} Returns the parsed value.\n     */\n    parsed (val) {\n        return val;\n    }\n\n    /**\n     * Generates and returns the domain for the field.\n     *\n     * @abstract\n     */\n    domain() {\n        throw new Error('Not yet implemented!');\n    }\n\n    subType() {\n        return null;\n    }\n\n\n    /**\n     * Parse the input value before using.\n     *\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented!');\n    }\n\n    /**\n     * Creates brand new copy of current field instance. To avoid optimization issue\n     * pass the required data otherwise current data would be copied which might\n     * be expensive.\n     *\n     * @param {Array} data - The input data, if provided current data will not be cloned.\n     * @return {PartialField} Returns the cloned field instance.\n     */\n    clone(data) {\n        data = data || extend2([], this.data);\n        const schema = extend2({}, this.schema);\n        // Here call the constructor to create an instance of\n        // the current field class type e.g. Measure, Dimension etc.\n        return new this.constructor(this.name, data, schema);\n    }\n\n    /**\n     * @return {string} Name of the field\n     */\n    fieldName() {\n        return this.name;\n    }\n\n     /**\n     * @return {string} Type of the field\n     */\n    type() {\n        return this.fieldType;\n    }\n\n    /**\n     * @return {description} Name of the field\n     */\n    description() {\n        return this.fieldDescription;\n    }\n}\n\nexport default PartialField;\n","import PartialField from './partial-field';\nimport { generateMeasureDomain, formatNumber } from '../utils';\nimport reducerStore from '../utils/reducer-store';\n\n/**\n * Represents measure field type.\n *\n * @extends PartialField\n */\nclass Measure extends PartialField {\n\n    /**\n     * Creates new Measure field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.fieldUnit = schema.unit;\n        this.fieldScale = schema.scale;\n        this.fieldDefAggFn = schema.defAggFn || reducerStore.defaultReducer().name;\n        this.fieldNumberformat = schema.numberFormat instanceof Function ? schema.numberFormat : formatNumber;\n    }\n\n    /**\n     * Returns the domain for the measure field.\n     *\n     * @override\n     * @return {Array} Returns min and max values from measure values.\n     */\n    domain() {\n        return generateMeasureDomain(this.data);\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. NaN value.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {number | null} Returns the parsed number value of content of cell or null.\n     */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n\n    /**\n     * Getter for unit value of the field.\n     *\n     * @return {string} Returns unit of the field.\n     */\n    unit() {\n        return this.fieldUnit;\n    }\n\n    /**\n     * Getter for scale value of the field.\n     *\n     * @return {string} Returns scale of the field.\n     */\n    scale() {\n        return this.fieldScale;\n    }\n\n    /**\n     * Getter for number format value of the field.\n     *\n     * @return {string} Returns number format of the field.\n     */\n    numberFormat() {\n        const formatter = this.fieldNumberformat;\n        return val => formatter(val);\n    }\n\n    /**\n     * Getter for aggregation function of the field.\n     *\n     * @return {Function} Returns aggregation function of the field.\n     */\n    defAggFn() {\n        return this.fieldDefAggFn;\n    }\n}\n\nexport default Measure;\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","import PartialField from './partial-field';\nimport { uniqueValues } from '../utils';\n\n/**\n * Represents dimension field type.\n *\n * @extends PartialField\n */\nclass Dimension extends PartialField {\n\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @return {Array} Returns the unique values from dimension values.\n     */\n    domain() {\n        return uniqueValues(this.data);\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. undefined or null etc.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {string} Returns the string representation of the value.\n     */\n    parse (val) {\n        val = (val === undefined || val === null) ? '' : val.toString();\n        return val.trim();\n    }\n\n    /**\n     * Saves the cardinality of the dimensional values after parsing the data.\n     *\n     * @param {string} val - The parsed value.\n     * @return {string} Returns the input val.\n     */\n    parsed (val) {\n        this._unique = this._unique || {};\n        const unique = this._unique;\n        if (val in unique) {\n            unique[val]++;\n        } else {\n            unique[val] = 1;\n        }\n        return val;\n    }\n}\n\nexport default Dimension;\n","import { DimensionSubtype } from '../enums';\nimport Dimension from './dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @extends Dimension\n */\nclass Categorical extends Dimension {\n\n    /**\n     * Creates new Categorical field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.subtype = DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Getter for subType value of the field.\n     *\n    * @return {string} Returns subType of the field.\n    */\n    subType() {\n        return this.subtype;\n    }\n}\n\nexport default Categorical;\n","import { DimensionSubtype } from '../enums';\nimport Dimension from './dimension';\nimport { DateTimeFormatter, getMinDiff } from '../utils';\n\n\n/**\n * Represents datetime field subtype.\n *\n * @extends Dimension\n */\nclass DateTime extends Dimension {\n\n    /**\n     * Creates new DateTime field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.subtype = DimensionSubtype.TEMPORAL;\n        this.minDiff = getMinDiff(this.data);\n    }\n\n    /**\n     * Getter for subType value of the field.\n     *\n    * @return {string} Returns subType of the field.\n    */\n    subType() {\n        return this.subtype;\n    }\n\n    getMinDiff () {\n        return this.minDiff;\n    }\n    /**\n    * A hook which is called for every entry(cell) of the column.\n    *\n    * @param {*} val - The current entry present in the column while iteration.\n    * @return {number} Returns the total timestamps in millisecond.\n    */\n    parse(val) {\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present then it means the value is such that the it could be directly passed to date\n        // constructor\n        return +new Date(val);\n    }\n}\n\nexport default DateTime;\n","import Measure from './measure';\n\n/**\n * Represents categorical field subtype.\n *\n * @extends Measure\n */\nclass DiscreteMeasure extends Measure {\n    constructor(name, data, schema, bin) {\n        super(name, data, schema);\n        this.bin = bin;\n        this.subtype = 'discrete';\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. undefined or null etc.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {string} Returns the string representation of the value.\n     */\n    parse (val) {\n        val = (val === undefined || val === null) ? '' : val.toString();\n        return val.trim();\n    }\n\n    bins() {\n        return this.bin;\n    }\n    subType() {\n        return this.subtype;\n    }\n}\n\nexport default DiscreteMeasure;\n","import { FieldType, DimensionSubtype } from './enums';\nimport { Measure, Categorical, DateTime, DiscreteMeasure } from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @todo Add logic for GEO dimension subtype.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField (data, schema) {\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case 'discrete':\n            return new DiscreteMeasure(schema.name, data, schema, schema.bins);\n        default:\n            return new Measure(schema.name, data, schema);\n        }\n    case FieldType.DIMENSION:\n    default:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(schema.name, data, schema);\n        case DimensionSubtype.TEMPORAL:\n            return new DateTime(schema.name, data, schema);\n        case DimensionSubtype.GEO:\n            return new Categorical(schema.name, data, schema);\n        default:\n            return new Categorical(schema.name, data, schema);\n        }\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nfunction createFields (dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n\nexport default createFields;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { isArray, isObject, isString } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    let converter;\n\n    if (isString(data)) {\n        converter = DSVStr;\n    } else if (isArray(data) && isArray(data[0])) {\n        converter = DSVArr;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        converter = FlatJSON;\n    } else {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converter(data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode } from './enums';\nimport Field from './fields/field';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator,\n    groupByIterator,\n    projectIterator,\n    selectIterator,\n    calculatedVariableIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport createFields from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name] = new Value(field.data[i], field);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => new Field(partialFieldMap[coll], rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let checker = index => selectFn(prepareSelectionData(fields, index), index);\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectFn(prepareSelectionData(fields, index));\n    }\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (propModels === null) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\nexport const propagateIdentifiers = (dataModel, propModel, config = {}, nonTraversingModel, grouped) => {\n    // function to propagate to target the DataModel instance.\n    const forwardPropagation = (targetDM, propagationData, hasGrouped) => {\n        propagateIdentifiers(targetDM, propagationData, config, nonTraversingModel, hasGrouped);\n    };\n\n    dataModel !== nonTraversingModel && dataModel.handlePropagation({\n        payload: config.payload,\n        data: propModel,\n        sourceIdentifiers: config.sourceIdentifiers,\n        sourceId: config.propagationSourceId,\n        groupedPropModel: !!grouped\n    });\n\n    // propagate to children created by SELECT operation\n    selectIterator(dataModel, (targetDM, criteria) => {\n        if (targetDM !== nonTraversingModel) {\n            const selectionModel = propModel[0].select(criteria, {\n                saveChild: false\n            });\n            const rejectionModel = propModel[1].select(criteria, {\n                saveChild: false\n            });\n\n            forwardPropagation(targetDM, [selectionModel, rejectionModel], grouped);\n        }\n    });\n    // propagate to children created by PROJECT operation\n    projectIterator(dataModel, (targetDM, projField) => {\n        if (targetDM !== nonTraversingModel) {\n            const projModel = propModel[0].project(projField, {\n                saveChild: false\n            });\n            const rejectionProjModel = propModel[1].project(projField, {\n                saveChild: false\n            });\n\n            forwardPropagation(targetDM, [projModel, rejectionProjModel], grouped);\n        }\n    });\n\n    // propagate to children created by groupBy operation\n    groupByIterator(dataModel, (targetDM, conf) => {\n        if (targetDM !== nonTraversingModel) {\n            const {\n                    reducer,\n                    groupByString\n                } = conf;\n                // group the filtered model based on groupBy string of target\n            const selectionGroupedModel = propModel[0].groupBy(groupByString.split(','), reducer, {\n                saveChild: false\n            });\n            const rejectionGroupedModel = propModel[1].groupBy(groupByString.split(','), reducer, {\n                saveChild: false\n            });\n            forwardPropagation(targetDM, [selectionGroupedModel, rejectionGroupedModel], true);\n        }\n    });\n\n    calculatedVariableIterator(dataModel, (targetDM, ...params) => {\n        if (targetDM !== nonTraversingModel) {\n            const entryModel = propModel[0].clone(false, false).calculateVariable(...params, {\n                saveChild: false,\n                replaceVar: true\n            });\n            const exitModel = propModel[1].clone(false, false).calculateVariable(...params, {\n                saveChild: false,\n                replaceVar: true\n            });\n            forwardPropagation(targetDM, [entryModel, exitModel], grouped);\n        }\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, config) => {\n    let criteria;\n    let propModel;\n    const propagationNameSpace = config.propagationNameSpace;\n    const payload = config.payload;\n    const propagationSourceId = config.propagationSourceId;\n\n    if (identifiers === null) {\n        criteria = null;\n    } else {\n        const filteredCriteria = Object.entries(propagationNameSpace.mutableActions)\n            .filter(d => d[0] !== propagationSourceId)\n            .map(d => Object.values(d[1]).map(action => action.criteria));\n        criteria = [].concat(...[...filteredCriteria, identifiers]);\n    }\n\n    const rootGroupByModel = rootModels.groupByModel;\n    const rootModel = rootModels.model;\n    const propConfig = {\n        payload,\n        propagationSourceId,\n        sourceIdentifiers: identifiers\n    };\n\n    if (rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: true\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    propModel = filterPropagationModel(rootModel, criteria, {\n        filterByMeasure: !rootGroupByModel\n    });\n    propagateIdentifiers(rootModel, propModel, propConfig, rootGroupByModel);\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationSourceId) => {\n    const rootGroupByModel = rootModels.groupByModel;\n    const rootModel = rootModels.model;\n    const immutableActions = propagationNameSpace.immutableActions;\n    for (const sourceId in immutableActions) {\n        const actions = immutableActions[sourceId];\n        for (const action in actions) {\n            const criteriaModel = actions[action].criteria;\n            propagateToAllDataModels(criteriaModel, {\n                groupByModel: rootGroupByModel,\n                model: rootModel\n            }, {\n                propagationNameSpace,\n                payload: actions[action].payload,\n                propagationSourceId\n            });\n        }\n    }\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Provides the relation algebra logics.\n */\nclass Relation {\n\n    /**\n     * If passed any data this will create a field array and will create\n     * a field store with these fields in global space which can be used\n     * by other functions for calculations and other operations on data\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Returns the schema details for all fields.\n     *\n     * @public\n     * @return {Array} Returns an array of field schema.\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema);\n    }\n\n    getName () {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * this reflect the cross-product of the relational algebra or can be called as theta join.\n     * It take another DataModel instance and create new DataModel with the cross-product data and\n     * filter the data according to the filter function provided.\n     * Say there are two dataModel modelA with 4 column 5 rows and modelB with 3 column 6 row\n     * so the new DataModel modelA X modelB will have 7(4 + 3) rows and 30(5 * 6) columns (if no\n     * filter function is provided).\n     *\n     * @todo Make this API user-friendly.\n     *\n     * @public\n     * @param  {DataModel} joinWith The DataModel to be joined with this DataModel\n     * @param  {Function} filterFn Function that will filter the result of the crossProduct\n     * DataModel\n     * @return {DataModel}          the new DataModel created by joining\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * This can join two DataModel to form a new DataModel which meet the requirement of\n     * natural join.\n     * it's not possible to pass a filter function as the filter function is decided according to\n     * the definition of natural join\n     *\n     * @todo Make this API user-friendly.\n     *\n     * @public\n     * @param  {DataModel} joinWith the DataModel with whom this DataModel will be joined\n     * @return {DataModel}          The new joined DataModel\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * Performs union operation of the relational algebra.\n     * It can be termed as vertical joining of all the unique tuples\n     * from both the DataModel instances. The requirement is both\n     * the DataModel instances should have same column name and order.\n     *\n     * @public\n     * @param {DataModel} unionWith - Another DataModel instance to which union\n     * operation is performed.\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * Performs difference operation of the relational algebra.\n     * It can be termed as vertical joining of all the tuples\n     * those are not in the second DataModel. The requirement\n     * is both the DataModel instances should have same column name and order.\n     *\n     * @public\n     * @param {DataModel} differenceWith - Another DataModel instance to which difference\n     * operation is performed.\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * Performs selection operation of the relational algebra.\n     *\n     * @public\n     * @param {Function} selectFn - The function which will be looped through all the data\n     * if it return true the row will be there in the DataModel.\n     * @param {Object} [config] - The mode configuration.\n     * @param {string} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @param {string} [saveChild=true] - It is used while cloning.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Returns whether datamodel has no data.\n     *\n     * @return {Boolean} Whether datamodel is empty or not.\n     */\n\n\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone  from the current DataModel instance with child parent relationship.\n     *\n     * @public\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded\n     * in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * Performs projection operation on the current DataModel instance.\n     *\n     * @public\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config={}] - An optional config.\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    /**\n     * Returns index and field details in an object where key is the field name.\n     *\n     * @public\n     * @return {Object} - Returns the field definitions.\n     */\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name] = {\n                index: i,\n                def: { name: fieldDef._ref.name, type: fieldDef._ref.fieldType, subtype: fieldDef._ref.subType() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * break the link between its parent and itself\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     *\n     * @param {DataModel} child : Delegates the parent to remove this child\n     */\n    removeChild (child) {\n        // remove from child list\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n    /**\n     *\n     * @param { DataModel } parent datamodel instance which will act as its parent of this.\n     * @param { Queue } criteriaQueue Queue contains in-between operation meta-data\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport createFields from './field-creator';\n\n/**\n * A model which has been built on the concept of relational algebra.\n *\n * @extends Relation\n */\nclass DataModel extends Relation {\n\n    /**\n     * Creates a new DataModel instance.\n     *\n     * @param {Array} args - The arguments which is passed directly to the parent class.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Returns the data after operation in the format of\n     * multidimensional array according to the given option value.\n     *\n     * @public\n     * @param {Object} [options] - Define how the data need to be returned.\n     * @param {Object} [options.order='row'] - Define the order of the data: row or column.\n     * @param {Object} [options.formatter=null] - An object map containing field specific formatter function.\n     * @param {Object} [options.withUid=false] - Whether the data uids will be included or not.\n     * @param {Object} [options.sort=[]] - The sorting details to sort the data.\n     * @return {Array} Returns a multidimensional array of the data.\n     * @example\n     *\n     * // Return data with formatted date value.\n     * const options = {\n     *  order: 'row',\n     *  formatter: {\n     *      birthday: (val, rowId, schema) => {\n     *          return yourCustomFormatter(val, \"%Y-%m-%d\");\n     *      }\n     *  }\n     * }\n     *\n     *  const dm = new DataModel(data, schema);\n     *  const dataFormatted = dm.getData(options);\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Performs group-by operation on the current DataModel instance according to\n     * the fields and reducers provided.\n     * The fields can be skipped in that case all field will be taken into consideration.\n     * The reducer can also be given, If nothing is provided sum will be the default reducer.\n     *\n     * @public\n     * @param {Array} fieldsArr - An array containing the name of the columns.\n     * @param {Object | Function | string} [reducers={}] - The reducer function.\n     * @param {string} [saveChild=true] - Whether the child to save  or not.\n     * @param {DataModel} [existingDataModel] - An optional existing DataModel instance.\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * It helps to define the sorting order of the returned data.\n     * This is similar to the orderBy functionality of the database\n     * you have to pass the array of array [['columnName', 'sortType(asc|desc)']] and the\n     * function getData will give the data accordingly.\n     *\n     * @public\n     * @param {Array} sortingDetails - An array containing the sorting details with column names;\n     * @return {DataModel} Returns a new sorted instance of DataModel.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, null, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    addField (field) {\n        const fieldName = field.fieldName();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.fieldName()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n     *\n     * @param {Object} varConfig :{\n     *  name: 'new-var',\n     *  type: 'measure | dimension',\n     *  subype: 'temporal | ...',\n     *  all the variable what schema gets\n     *  }}\n     *  @param {Array} paramConfig : ['dep-var-1', 'dep-var-2', 'dep-var-3', ([var1, var2, var3], rowIndex, dm) => {}]\n     * @param {Object} config : { saveChild : true | false , removeDependentDimensions : true|false}\n     */\n    calculateVariable (schema, dependency, config = { saveChild: true, replaceVar: false }) {\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in model.`);\n        }\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        let clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, fs);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @public\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, payload, config = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        propagateToAllDataModels(identifiers, rootModels, {\n            propagationNameSpace,\n            payload,\n            propagationSourceId\n        });\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, propagationSourceId);\n        }\n        return this;\n    }\n\n    addToPropNamespace (sourceId, config = {}) {\n        let sourceNamespace;\n        const actionName = config.actionName;\n        const payload = config.payload;\n        const isMutableAction = config.isMutableAction;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const criteria = config.criteria;\n\n        if (isMutableAction) {\n            !propagationNameSpace.mutableActions[sourceId] && (propagationNameSpace.mutableActions[sourceId] = {});\n            sourceNamespace = propagationNameSpace.mutableActions[sourceId];\n        } else {\n            !propagationNameSpace.immutableActions[sourceId] && (propagationNameSpace.immutableActions[sourceId] = {});\n            sourceNamespace = propagationNameSpace.immutableActions[sourceId];\n        }\n\n        if (criteria === null) {\n            delete sourceNamespace[actionName];\n        } else {\n            sourceNamespace[actionName] = {\n                criteria,\n                payload\n            };\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @public\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @public\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with\n     * propagation.\n     *\n     * @todo Fix whether this method would be public or not.\n     *\n     * @private\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, payload));\n    }\n\n    /**\n     @param {String} measureName : name of measure which will be used to create bin\n     @param {Object} config : bucketObj : {} || binSize : number || noOfBins : number || binFieldName : string\n     @param {Function | FunctionName} reducer : binning reducer\n     */\n    bin (measureName, config = { }) {\n        const clone = this.clone();\n        const binFieldName = config.name || `${measureName}_binned`;\n        if (this.getFieldsConfig()[binFieldName] || !this.getFieldsConfig()[measureName]) {\n            throw new Error(`Field ${measureName} already exists.`);\n        }\n        const field = this._partialFieldspace.fields.find(currfield => currfield.name === measureName);\n        const dataSet = createBinnedFieldData(field, this._rowDiffset, config);\n        const binField = createFields([dataSet.data], [\n            {\n                name: binFieldName,\n                type: FieldType.MEASURE,\n                subtype: 'discrete', // @todo : DimensionSubtype\n                bins: {\n                    range: dataSet.range,\n                    mid: dataSet.mid\n                }\n            }], [binFieldName])[0];\n        clone.addField(binField);\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureName, config, binFieldName }, null);\n        return clone;\n    }\n}\n\nexport default DataModel;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport * as Operators from './operator';\nimport * as Stats from './stats';\nimport pkg from '../package.json';\n\nDataModel.Operators = Operators;\nDataModel.Stats = Stats;\nDataModel.version = pkg.version;\n\nexport * from './enums';\nexport { DateTimeFormatter } from './utils';\nexport default DataModel;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    unique(queue).forEach(fn => fn());\n                    onFinishCallback();\n                    animationFrame = null;\n                    queue.length = 0;\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\n// function getUpstreamNodes (node, list) {\n//     if (node.isRoot()) {\n//         return;\n//     }\n//     node.outgoingEdges.forEach((_node) => {\n//         list.push(_node);\n//         getUpstreamNodes(_node, list);\n//     });\n// }\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    // upstreamNodes,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler(() => {\n            let qname;\n            for (qname in this.qualifiedNodeMap) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs);\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n * @todo\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object} @todo\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     * @todo\n     *\n     * @export\n     * @param {Object} name @todo\n     * @return {Object} @todo\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = [];\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        this._listeners.push(fn);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        this._listeners.push(fn);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    unsubscribeAll () {\n        this._listeners.forEach(fn => fn());\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array} @todo\n */\nconst transactor = (holder, options, model) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            if (!store.prop(prop)) {\n                store.append({ [prop]: conf.value });\n            }\n            holder[prop] = ((context, key, meta) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = store.prop(prop);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] : meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.prop(key);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.prop(key, spreadParams ? values : values[0]);\n                    } else {\n                        context.prop(key, spreadParams ? val : val[0]);\n                    }\n                    return holder;\n                }\n            // No parameters are passed hence its a getter\n                return context.prop(key);\n            })(store, prop, conf.meta);\n        }\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n * @returns\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n * @returns\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n * @returns\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n * @returns\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap) => {\n    const propListenerMap = listenerMap(context);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn);\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n * @returns\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n *\n *\n * @param {*} str\n * @returns\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.keys(this._idMap).map(e => this._idMap[e]);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e) => {\n            fn(this._idMap[e]);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            this._idMap[params[0]] = fn(this._idMap[params[0]], ...params);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","import { getUniqueId } from '../index';\n/**\n * Represents the base class that all objects that form\n * the data for a selection must inherit from.\n *\n * @class DataObject\n */\nclass DataObject {\n/**\n * Creates an instance of DataObject.\n * @memberof DataObject\n */\n    constructor () {\n        this._id = getUniqueId();\n    }\n    /**\n     * Returns the id.\n     *\n     * @readonly\n     * @memberof DataObject\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Sets the value corresponding to supplied key.\n     *\n     * @param {string} key The property name.\n     * @param {any} value Value associated with prop.\n     * @memberof DataObject\n     */\n    attr (key, value) {\n        this[key] = value;\n    }\n\n    /**\n     * Clean up code to be executed by each object.\n     *\n     * @override\n     * @memberof DataObject\n     */\n    remove () {\n        // cleanup\n    }\n}\n\nexport default DataObject;\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = this._notifiers[eventName](resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed.\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes the ids from the selection set.\n     * @param {Array.<string>} ids Array of unique ids\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are in the remove set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const sideEffectInstance = sideEffectsMap[SideEffect.formalName()];\n        sideEffectsMap[SideEffect.formalName()] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else {\n                    existingModel = models[type] = model.union(existingModel);\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    getElementsByClassName,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement\n} from 'muze-utils';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * Relient firebolt is responsible for dispatching behaviours. It has only behaviours which can be\n * dispatched without any physical action being triggered.\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            tooltip: true,\n            selectionBox: true\n        };\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = [];\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            const conf = this._config = mergeRecursive(this._config, config[0]);\n            const sideEffects = this.sideEffects();\n            for (const key in sideEffects) {\n                if ({}.hasOwnProperty.call(sideEffects, key)) {\n                    const sideEffectConf = conf[key];\n                    sideEffectConf && sideEffects[key].config(sideEffectConf);\n                }\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set([...behaviourEffectMap[key], ...sideEffects])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = [];\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects.push({\n                            name,\n                            params: [combinedSet, payload, options]\n                        });\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        this._queuedSideEffects.push(...queuedSideEffects);\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n        if (action && action.isEnabled()) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds) {\n        const behaviours = this._actions.behavioural;\n        const selectionSet = {};\n        const volatileSelectionSet = {};\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    propagateWith (action, ...fields) {\n        if (fields.length) {\n            this._propagationFields[action] = fields;\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour () {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action], target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        Object.assign(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            let nodes;\n            const mount = this.context.mount();\n            if (target[0] === '.') {\n                nodes = getElementsByClassName(mount, target);\n            } else {\n                nodes = selectElement(mount).selectAll(target);\n            }\n            if (behaviourList.length) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, FieldType } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype ? fieldsConfig[xField].def.subtype :\n        fieldsConfig[xField].def.type;\n    const yFieldType = fieldsConfig[yField].def.subtype ? fieldsConfig[yField].def.subtype :\n            fieldsConfig[yField].def.type;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === FieldType.MEASURE ? (yFieldType === FieldType.MEASURE ? ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    const d3Drag = getD3Drag();\n    const boundingBox = targetEl.node().getBoundingClientRect();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\n\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    apply () {\n        return this;\n    }\n\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    createElement (container, elemType, data, className) {\n        return makeElement(container, elemType, data, className);\n    }\n\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    const context = firebolt.context;\n    const drawingInf = context.getDrawingContext();\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconSize: 30,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        tooltipArrow.style('top', '');\n        tooltipArrow.style('left', `${arrowPos}px`);\n        tooltipBackground.style('top', '');\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\nconst defaultTooltipFormatters = (type, formatter) => {\n    const formatters = {\n        [DimensionSubtype.TEMPORAL]: (value, interval) => {\n            const nearestInterval = getNearestInterval(interval);\n            return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n        },\n        [FieldType.MEASURE]: value => formatter(value ? value.toFixed(2) : value),\n        [FieldType.DIMENSION]: value => value\n    };\n    return formatters[type];\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const formatters = config.formatters;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsObj = fieldspace.fieldsObj();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                fieldsObj[field].getMinDiff() : 0;\n        const formatterFn = (formatters && formatters[field]) || defaultTooltipFormatters(type, val => val);\n\n        if (value !== null) {\n            let uniqueVals = type === FieldType.MEASURE ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== FieldType.MEASURE;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconSize\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            formattedValue = defaultTooltipFormatters('measure',\n                                fieldspace.fields[measureIndex]._ref.numberFormat())(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        formattedValue = defaultTooltipFormatters('measure',\n                            fieldspace.fields[measureIndex]._ref.numberFormat())(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n\n    dimensions.forEach((item) => {\n        const type = item.subtype ? item.subtype : item.type;\n        fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n    });\n\n    const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n    const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n        : measures;\n    filteredMeasures.forEach((item) => {\n        const type = item.subtype ? item.subtype : item.type;\n        fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n    });\n\n    return fieldValues;\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            const rows = makeElement(mount, 'p', data, `${config.classPrefix}-tooltip-row`);\n            const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n            cells.attr('class', `${config.classPrefix}-tooltip-content`);\n            setStyles(rows, {\n                margin: rowMargin\n            });\n            setStyles(cells, {\n                display: 'inline-block',\n                'margin-right': `${config.spacing}px`\n            });\n\n            cells.each(function (d) {\n                const el = selectElement(this);\n                el.html('');\n                if (d instanceof Object) {\n                    if (d.type === 'icon') {\n                        const svg = makeElement(el, 'svg', [1]);\n                        const path = makeElement(svg, 'path', [1]);\n                        const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                        setAttrs(svg, {\n                            x: 0,\n                            y: 0,\n                            width: iconContainerSize,\n                            height: iconContainerSize\n                        });\n                        setAttrs(path, {\n                            d: shape.size(d.size)(),\n                            transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                        });\n                        setStyles(path, {\n                            fill: d.color\n                        });\n                    } else {\n                        el.html(d.value);\n                        d.className && el.classed(d.className, true);\n                        setStyles(el, d.style);\n                    }\n                } else {\n                    el.html(d);\n                }\n            });\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n            if (outsidePlot) {\n                let path;\n                this._tooltipArrow.style('display', 'none');\n                this._tooltipBackground.style('display', 'none');\n                this._tooltipConnectorContainer.style('display', 'block');\n                const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                const enter = connector.enter().append('path');\n                if (arrowOrient === ARROW_LEFT) {\n                    path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                        + ` ${target.y + target.height / 2}`;\n                } else if (arrowOrient === ARROW_RIGHT) {\n                    path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                            + ` L ${target.x} ${target.y + target.height / 2}`;\n                } else if (arrowOrient === ARROW_BOTTOM) {\n                    path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                        + ` L ${target.x + target.width / 2} ${target.y}`;\n                }\n                enter.merge(connector).attr('d', path).style('display', 'block');\n            } else {\n                const arrowPos = getArrowPos(arrowOrient, target, {\n                    x,\n                    y,\n                    boxHeight: node.offsetHeight,\n                    boxWidth: node.offsetWidth\n                }, this._config);\n\n                placeArrow(this, this._arrowOrientation, arrowPos);\n                this._tooltipConnectorContainer.style('display', 'none');\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        const scrollTop = document.body.scrollTop;\n        const scrollLeft = document.body.scrollLeft;\n        this._tooltipContainer.style('left', `${offset.x + x - scrollLeft}px`).style('top',\n            `${offset.y + y - scrollTop}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n\n        const positionHorizontal = () => {\n            let position;\n            const dimX = dim.x + dim.width + offset.x;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n            // When there is no space in right\n            const rightSpace = extent.width - dimX;\n            const leftSpace = dim.x - extent.x;\n            if (rightSpace >= offsetWidth + arrowSize) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (leftSpace >= offsetWidth + arrowSize) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n            const y = dim.y - offsetHeight - arrowSize;\n\n            // Overflows to the right\n            if ((extent.width - dim.x) < offsetWidth) {\n                x = extent.width - offsetWidth;\n            } else if (x < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            position = TOOLTIP_BOTTOM;\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            orientation = topSpace > (offsetHeight + arrowSize) ? 'vertical' : 'horizontal';\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE).map(d => d.name);\n        const aggregatedModel = dm.groupBy(['']);\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        console.log(dataObj.data.length);\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        if (measures.length) {\n            values = [...values, ...[`(${fieldsObj[measures[0]].defAggFn().toUpperCase()}) ${measures[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measures[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, ReservedFields } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if (dataModel.isEmpty() || payload.criteria === null) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xField = `${fields.x[0]}`;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const xFieldDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n        const plotDimensions = context.getPlotPointsFromIdentifiers(payload.target || payload.criteria);\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                plotDim = context.getPlotPointsFromIdentifiers([[ReservedFields.ROW_ID], dataModels[i].getData().uids]);\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataModels[i];\n            enter[i] = true;\n            const htmlContainer = drawingInf.parentContainer.getBoundingClientRect();\n            const layoutBoundBox = document.body.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n            const offsetLeft = Math.abs(layoutBoundBox.left - unitBoundBox.left);\n            const offsetTop = Math.abs(layoutBoundBox.top - unitBoundBox.top);\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(document.body,\n                    drawingInf.svgContainer);\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: htmlContainer.width,\n                                height: htmlContainer.height\n                            })\n                            .offset({\n                                x: offsetLeft,\n                                y: offsetTop\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        const context = this.firebolt.context;\n        this._layers = this.addAnchorLayers(context);\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers (context) {\n        let layers = [];\n        this.firebolt.context.layers().forEach((layer, idx) => {\n            const shouldDrawAnchors = layer.shouldDrawAnchors();\n            if (shouldDrawAnchors) {\n                const encodingFieldsInf = layer.encodingFieldsInf();\n                const config = layer.config();\n                layers = [...layers, ...context.addLayer({\n                    name: `${layer.alias()}-${this.constructor.formalName()}-${idx}`,\n                    mark: 'point',\n                    encoding: {\n                        x: encodingFieldsInf.xField,\n                        y: encodingFieldsInf.yField,\n                        color: {\n                            field: encodingFieldsInf.colorField\n                        },\n                        size: {\n                            field: encodingFieldsInf.sizeField,\n                            value: this.defaultSizeValue()\n                        }\n                    },\n                    transform: config.transform,\n                    transition: this.getTransitionConfig(),\n                    calculateDomain: false,\n                    source: dt => dt.select(() => false),\n                    interactive: false,\n                    render: false\n                })];\n            }\n        });\n        return layers;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        const sideEffectGroup = drawingInf.sideEffectGroup;\n        const className = this.config().className;\n        const anchorGroups = this.createElement(sideEffectGroup, 'g', this._layers.map(d => d.id()), className);\n        const layers = this._layers;\n        anchorGroups.each(function (d, i) {\n            layers[i].data(dataModel).mount(this);\n        });\n\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import { FieldType, getDomainFromData, setStyles, easeFns, selectElement } from 'muze-utils';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING } from '../enums/constants';\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n * @returns\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n * @returns\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n * @returns\n */\nexport const getValidTransform = (layerConfig, fieldsConfig, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n * @returns\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    });\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n","import { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nexport const listenerMap = context => [\n    {\n        props: [PROPS.TRANSFORMED_DATA],\n        listener: fetch => fetch(PROPS.DATA, PROPS.CONFIG, (dataModel, config) => {\n            const dataModelValue = dataModel.value;\n            const configValue = config.value;\n            const encodingValue = configValue && configValue.encoding;\n            if (dataModelValue && encodingValue) {\n                const fieldsConfig = dataModelValue.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(configValue, fieldsConfig, encodingFieldsInf));\n                return context.getTransformedData(dataModelValue, configValue, context.transformType(),\n                    encodingFieldsInf);\n            }\n            return null;\n        }),\n        type: 'computed'\n    },\n    {\n        props: [PROPS.NORMALIZED_DATA],\n        listener: fetch => fetch(PROPS.TRANSFORMED_DATA, (transformedData) => {\n            const transformedDataValue = transformedData.value;\n            if (transformedDataValue) {\n                const fieldsConfig = context.data().getFieldsConfig();\n                return context.getNormalizedData(transformedDataValue, fieldsConfig);\n            }\n            return null;\n        }),\n        type: 'computed'\n    },\n    {\n        props: [PROPS.DOMAIN],\n        listener: fetch => fetch(PROPS.NORMALIZED_DATA, (normalizedData) => {\n            const normalizedDataValue = normalizedData.value;\n            if (normalizedDataValue) {\n                return context.calculateDomainFromData(normalizedDataValue, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n            }\n            return null;\n        }),\n        type: 'computed'\n    },\n    {\n        props: [PROPS.MOUNT],\n        listener: (mountPoint) => {\n            if (mountPoint[1]) {\n                context.render(mountPoint[1]);\n                context.dependencies().throwback.commit('onlayerdraw', true);\n            }\n        },\n        type: 'registerChangeListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const AXES = 'axes';\nexport const NORMALIZED_DATA = 'normalizedData';\nexport const TRANSFORMED_DATA = 'transformedData';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\nexport const FIELDMAP = 'fieldMap';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    },\n    [PROPS.MOUNT]: {\n        value: null\n    },\n    [PROPS.AXES]: {\n        value: null\n    },\n    [PROPS.MEASUREMENT]: {\n        value: null\n    }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    Store,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives defination of common layer functionality like\n * - transfromation data for various {@link mode}\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @namespace Muze\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     *\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.shape Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies) {\n        super();\n        this.store(new Store({\n            DATA: null\n        }));\n        transactor(this, defaultOptions, this.store().model);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        registerListeners(this, listenerMap);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layer([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @returns {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    store (...store) {\n        if (store.length) {\n            this._store = store[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     * @public\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @public\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store().get(PROPS.DOMAIN);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply) {\n        const interactionConfig = this.config().interaction || {};\n\n        const interactionStyles = interactionConfig[interactionType];\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribeAll();\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     * @returns\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     * @returns\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     * @returns\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers, getAllAttrs) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return false;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const attrs = d.update || d;\n            if (!attrs.width) {\n                attrs.width = 2;\n            }\n            if (!attrs.height) {\n                attrs.height = 2;\n            }\n            return attrs;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     * @returns\n     * @memberof BaseLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data => set.indexOf(data._id) !== -1);\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { container, points, interpolate, connectNullData, className, style } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    return makeElement(mount, 'path', [1])\n                    .transition()\n                    .duration(1000)\n                    .attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, -10, -10, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, -30, +30, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, -30, +30, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport * as PROPS from '../../enums/props';\nimport { attachDataToVoronoi, animateGroup, getLayerColor, positionPoints } from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * Line Layer creates a line plot.\n * Example :-\n * const config = {\n *  encoding = {\n *      x: {\n *          field: 'date'\n *      },\n *      y: {\n *          field: 'sales'\n *      }\n *  }\n * };\n * const linelayer = layerFactory.getLayer('line', [dataModel, axes, config]);\n * linelayer.render(container);\n * @class\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     *Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     * @returns\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    /**\n     * Applies selection styles to the elements that fall within the selection set.\n     * @param {Array} selectionSet Array of tuple ids.\n     * @param {Object} config Configuration for selection.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    highlightPoint () {\n        return this;\n    }\n\n    /**\n     * Removes selection styles to the elements that fall within the selection set.\n     * @param {Array} selectionSet Array of tuple ids.\n     * @param {Object} config Configuration for selection.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    focusSelection () {\n        return this;\n    }\n\n    focusOutSelection () {\n        return this;\n    }\n\n    fadeOutSelection () {\n        return this;\n    }\n\n    unfadeSelection () {\n        return this;\n    }\n\n    shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                meta\n            };\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const store = this._store;\n        const normalizedData = store.get(PROPS.NORMALIZED_DATA);\n        const transformedData = store.get(PROPS.TRANSFORMED_DATA);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldMeasure = fieldsConfig[colorField] && fieldsConfig[colorField].def.type === FieldType.MEASURE;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                if (!colorFieldMeasure) {\n                    style = points[i].style;\n                }\n                this.getDrawFn()({\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        });\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([1]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function () {\n                        const element = selectElement(this);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor } from '../../helpers';\n\n/**\n * Area Layer creates a area plot.\n * @example\n * const config = {\n *  encoding = {\n *      x: {\n *          field: 'date'\n *      },\n *      // Top y value\n *      y: {\n *          field: 'maxTemp'\n *      },\n *      // Base y value\n *      y0: {\n *          field: 'minTemp\n *      }\n *  }\n * };\n * const areaLayer = layerFactory.getLayer('area', [dataModel, axes, config]);\n * areaLayer.render(container);\n * @class\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                style,\n                meta\n            };\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import { getObjProp, interpolator, FieldType } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\n\nconst getIndexedPoint = (prevData, currIndex) => {\n    if (!prevData[currIndex]) {\n        const prevArc = prevData[currIndex - 1];\n        const nextArc = prevData[currIndex + 1];\n        if (prevArc && nextArc) {\n            return {\n                startAngle: prevArc[0].endAngle,\n                endAngle: nextArc[0].startAngle\n            };\n        } else if (!nextArc) {\n            return {\n                startAngle: Math.PI * 2,\n                endAngle: Math.PI * 2\n            };\n        }\n    }\n    return { startAngle: 0, endAngle: 0 };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n * @returns\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, b, prevData) => {\n    const { datum } = b[0];\n    const uid = datum.uid;\n    const prevDatum = getObjProp(prevData, uid, 0) || getIndexedPoint(prevData, uid);\n    const prevObject = { startAngle: prevDatum.startAngle, endAngle: prevDatum.endAngle };\n\n    return function (t) {\n        return path(interpolator()(prevObject, datum)(t));\n    };\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport * as PROPS from '../../enums/props';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getRangeValue, getRadiusRange, tweenPie, getFieldIndices } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates\n * Example :-\n * const config = {\n *  height: 100,\n *  width: 100,\n *  startAngle: 0,\n * endAngle: Math.PI,\n * cornerRadius: 10,\n * minOuterRadius: 10,\n * outerRadius: 10,\n * innerRadius: 5,\n * padAngle: 2,\n * padRadius: 2,\n * colors: []\n * padding: {top: 10, bottom: 10, left: 10, right: 10},\n *  encoding = {\n *      angle: {\n *          field: 'date' //Maps to angle of arc\n *      },\n *      radius: {\n *          field: 'sales' // Maps to radius of arc\n *      }\n *  }\n * };\n * @class\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._store.get(PROPS.TRANSFORMED_DATA) || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1);\n\n        sort.length && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = config.data;\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id(),\n                showInPosition: true\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     * @returns\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const store = this._store;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = store.get(PROPS.DOMAIN).radius;\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                .outerRadius(d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .attr('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .attrTween('d', (...params) => tweenPie(path, params, this._prevPieData))\n                            .attr('class', d => `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}`);\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', store.get(PROPS.TRANSFORMED_DATA), `${qualClassName[0]}`,\n            { update: tween }, d => d.uid)\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`)\n                        .call(tween);\n        return this;\n    }\n}\n\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const { backgroundPadding } = config;\n\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, background, text, color, textanchor } = dataObj;\n        if (config.backgroundEnabled) {\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        color && setStyles(textNode, {\n            fill: color\n        });\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, -10, -10, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, -30, +30, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, -30, +30, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: ''\n        },\n        background: {\n            padding: 10,\n            enabled: false\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\nimport * as PROPS from '../../enums/props';\n\nimport './styles.scss';\n\n/**\n * Text Layer creates labels. It needs to be passed a data table, axes and configuration\n * of the layer.\n * Example :-\n * const textLayer = layerFactory.getLayer('text', [dataModel, axes, config]);\n * textLayer.render(container);\n * @class\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points;\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const backgroundField = encoding.background.field;\n        const backgroundFieldIndex = backgroundField ? fieldsConfig[backgroundField].index : -1;\n        const colorFieldIndex = colorField ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n\n        points = data.map((d, i) => {\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            return {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: colorAxis.getColor(d._data[backgroundFieldIndex]),\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                _data: row,\n                _id: d._id\n            };\n        });\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._store.get(PROPS.NORMALIZED_DATA);\n        const className = config.className;\n        const backgroundPadding = encoding.background.padding;\n        const backgroundEnabled = encoding.background.enabled || encoding.background.field;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0],\n                    backgroundPadding,\n                    backgroundEnabled\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n * @returns\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups : mergedGroups.transition().duration(disabled ? 0 : transition.duration);\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [-20, -80, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +50, 0]\n        }\n        ]\n    },\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport * as PROPS from '../../enums/props';\nimport { attachDataToVoronoi, getLayerColor, positionPoints } from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * Point Layer creates point. Itt needs to be passed a data table, axes and configuration\n * of the layer.\n * Example :-\n * const pointLayer = layerFactory.getLayer('point', [data, axes, config]);\n * pointLayer.render(container);\n * @class\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     *Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this._store.get(PROPS.MEASUREMENT);\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            const [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const bandwidth = axes[type].getUnitWidth() / 2;\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value) + bandwidth;\n            });\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id\n                };\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let points;\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const { transition, encoding, className, defClassName, classPrefix } = config;\n        const axes = this.axes();\n        const normalizedData = this._store.get(PROPS.NORMALIZED_DATA);\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                this._points.push(points);\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        });\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = this._maxSize;\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (elem, datum, index, context) => {\n    const { transition, classnameFn } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n    const selTransition = disabled ? selection : selection.transition().duration(duration).ease(easeFns[effect]);\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    classnameFn && selection.classed(classnameFn(datum, index), true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n * @returns\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n * @returns\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: 0,\n        smartTicks: false\n    },\n    orientation: 'left',\n    maxHeight: 50, // @todo: height and width wont be hardcoded\n    maxWidth: 40,\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: false,\n    showInnerTicks: null,\n    showOuterTicks: null,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: undefined,\n    yOffset: undefined\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager, config) => {\n    const axis = instance.axis();\n    const scale = instance.scale();\n    const {\n        orientation,\n        labels,\n        fixedBaseline,\n        type\n     } = config;\n    let { rotation } = labels;\n\n    const tickSize = instance.getTickSize();\n\n    tickText.each(function (datum, index) {\n        let yShift;\n        let xShift;\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : scale.tickFormat;\n        const temp = tickFormatter ? tickFormatter()(datum) : datum;\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (index === 0 && fixedBaseline && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize} \n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (index === 0 && fixedBaseline && type === LINEAR) ? xShift - xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize} \n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        labels,\n        orientation\n    } = config;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation !== 0 && isSmartTicks === false && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager, config);\n    } else if (rotation === 0 && isSmartTicks === false) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.attr('y', 0)\n                        .attr('x', 0)\n                        .text('');\n        const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, 'smart-text');\n        tspan.attr('dy', '0')\n                        .style('opacity', '0')\n                        .transition()\n                        .duration(1000)\n                        .attr('dy', (d, i) => {\n                            if (orientation === BOTTOM || i !== 0) {\n                                return _smartTicks[i].oriTextHeight;\n                            }\n                            return -_smartTicks[i].oriTextHeight * (_smartTicks[i].lines.length - 1) - tickSize;\n                        })\n                        .style('opacity', 1)\n                        .attr('x', 0)\n                        .text(e => e);\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const {\n        _axisNameStyle,\n        _tickLabelStyle\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        labels,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        showAxisName,\n        show,\n        id,\n        interpolator,\n        classPrefix\n     } = config;\n\n    if (!show) {\n        return;\n    }\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    // @to-do: Need to write a configuration override using decorator pattern\n    if (interpolator === 'linear') {\n    // Set ticks for the axis\n        axisInstance.setTickValues();\n    }\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisDimensions().tickLabelDim;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false) {\n        selectContainer.transition()\n                        .duration(1000).call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { LOG } from '../enums/scale-type';\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(1, numberOfValues));\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const sanitizeDomain = (domain, context) => {\n    const interpolator = context.config().interpolator;\n    // @todo: Get from scale decorator\n    if (interpolator === LOG && domain[0] >= 0) {\n        return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n    }\n    return domain;\n};\n\n/**\n *\n *\n * @returns\n * @memberof SimpleAxis\n */\nexport const getTickLabelInfo = (context) => {\n    let largestLabel = '';\n    let labelProps;\n    let smartTick = {};\n    let axisTickLabels;\n    const scale = context.scale();\n    const allLabelLengths = [];\n    const { tickFormat, tickValues, numberFormat } = context.config();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    // set the style on the shared label manager instance\n    const { labelManager } = context.dependencies();\n\n    labelManager.setStyle(context._tickLabelStyle);\n    // get the values along the domain\n\n    axisTickLabels = tickValues || labelFunc();\n    // Get the tick labels\n    axisTickLabels = axisTickLabels.map((originalLabel, i) => {\n        const formattedLabel = numberFormat(originalLabel);\n\n        //  get formats of tick if any\n        const label = tickFormat ? tickFormat(formattedLabel) : (scale.tickFormat ?\n            numberFormat(scale.tickFormat()(originalLabel)) : formattedLabel);\n\n        // convert to string for quant values\n        const temp = label.toString();\n        // Get spaces for all labels\n        allLabelLengths.push(labelManager.getOriSize(temp));\n        // Getting largest label\n        if (temp.length > largestLabel.length) {\n            largestLabel = temp;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            labelProps = allLabelLengths[i];\n        }\n        return label;\n    });\n\n    labelProps = labelManager.getOriSize(largestLabel);\n\n    return { largestLabel, largestLabelDim: labelProps, axisTickLabels, allLabelLengths, smartTick };\n};\n\n/**\n *\n *\n * @returns\n * @memberof SimpleAxis\n */\nexport const computeAxisDimensions = (context) => {\n    let tickLabelDim = {};\n    const {\n        name,\n        labels,\n        tickValues\n    } = context.config();\n    const angle = ((labels.smartTicks) ? 0 : labels.rotation) * Math.PI / 180;\n    const { labelManager } = context.dependencies();\n    const {\n        largestLabelDim,\n        axisTickLabels,\n        smartTick\n    } = getTickLabelInfo(context);\n    const { height: labelHeight, width: labelWidth } = largestLabelDim;\n    // get the domain of axis\n    const domain = context.domain();\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (context._rotationLock === false) {\n        context.setRotationConfig(tickValues || axisTickLabels, largestLabelDim.width);\n        context._rotationLock = false;\n    }\n    if (labels.smartTicks) {\n        tickLabelDim = smartTick;\n    } else {\n        tickLabelDim = {\n            width: Math.abs(labelHeight * Math.sin(angle)) + Math.abs(labelWidth * Math.cos(angle)),\n            height: Math.abs(labelWidth * Math.sin(angle)) + Math.abs(labelHeight * Math.cos(angle))\n        };\n    }\n\n    labelManager.setStyle(context._axisNameStyle);\n    return {\n        tickSize: context.getTickSize(),\n        tickLabelDim,\n        axisLabelDim: labelManager.getOriSize(name),\n        largestLabelDim,\n        axisTickLabels\n    };\n};\n\n/**\n*\n*\n* @memberof SimpleAxis\n*/\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\n/**\n *\n *\n * @param {*} timeDiff\n * @param {*} range\n * @param {*} domain\n * @returns\n */\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\n /**\n * Listener attached to the axis on change of parameters.\n *\n * @param {Function} callback to be excuted on change of domain range etc\n * @memberof SimpleAxis\n */\nexport const registerChangeListeners = (context) => {\n    const store = context.store();\n\n    store.model.next(['domain', 'range', 'mount', 'config'], (...params) => {\n        context.render();\n        context._domainLock = false;\n        context._eventList.forEach((e) => {\n            e.action instanceof Function && e.action(...params);\n        });\n    }, true);\n    return context;\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n * @returns\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, config, range) => {\n    let width;\n    let height;\n    const {\n        tickSize,\n        tickLabelDim,\n        axisLabelDim\n    } = axisDimensions;\n    const {\n        axisNamePadding,\n        showAxisName,\n        tickValues\n   } = config;\n    const domain = context.domain();\n    const { height: axisDimHeight } = axisLabelDim;\n    const { height: tickDimHeight, width: tickDimWidth } = tickLabelDim;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [Math.min(...tickValues, ...domain), Math.max(...tickValues, ...domain)];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? (axisDimHeight + axisNamePadding) : 0) + tickSize;\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n * @returns\n */\nexport const getVerticalAxisSpace = (context, axisDimensions, config) => {\n    let height;\n    let width;\n    const {\n        tickSize,\n        tickLabelDim,\n        axisLabelDim\n    } = axisDimensions;\n    const {\n        axisNamePadding,\n        showAxisName,\n        tickValues\n   } = config;\n    const domain = context.domain();\n    const { height: axisDimHeight } = axisLabelDim;\n    const { height: tickDimHeight, width: tickDimWidth } = tickLabelDim;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [Math.min(...tickValues, ...domain), Math.max(...tickValues, ...domain)];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * (tickDimHeight);\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n /**\n     * Calculates the logical space of the axis\n     * @return {Object} Width and height occupied by the axis.\n     */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const config = context.config();\n    const {\n        orientation,\n        show\n    } = config;\n    const axisDimensions = context.getAxisDimensions();\n    const {\n        largestLabelDim,\n        axisTickLabels\n    } = axisDimensions;\n    const { height: largestDimHeight, width: largestDimWidth } = largestLabelDim;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        let { width, height } = getHorizontalAxisSpace(context, axisDimensions, config, range);\n        if (!width || width === 0) {\n            width = axisTickLabels.length * (Math.min(largestDimWidth + context._minTickDistance.width,\n                         largestDimHeight + context._minTickDistance.width));\n        }\n        if (show === false) {\n            height = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let { width, height } = getVerticalAxisSpace(context, axisDimensions, config, range);\n\n    if (!height || height === 0) {\n        height = axisTickLabels.length * (largestDimHeight + largestDimHeight / 2) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n     * Calculates the logical space of the axis\n     * @return {Object} Width and height occupied by the axis.\n     */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const config = context.config();\n    const axisDimensions = context.getAxisDimensions();\n\n    const {\n        orientation,\n        show,\n        showAxisName\n    } = config;\n    const {\n        axisLabelDim\n    } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisDimWidth } = axisLabelDim;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const { width, height } = getHorizontalAxisSpace(context, axisDimensions, config);\n        const axisWidth = Math.max(width, axisDimWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n\n    const { width, height } = getVerticalAxisSpace(context, axisDimensions, config, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisDimWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            if (value.labels && value.labels.rotation) {\n                context._rotationLock = true;\n            }\n            value = mergeRecursive(context._config || {}, value);\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            context.axis(context.createAxis(value));\n            context.store().commit('config', value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n        sanitization: (context, value) => {\n            context.store().commit('mount', value);\n            return value;\n        }\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    store: {},\n    tickSize: {}\n};\n","import {\n    Store,\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { DOMAIN, BAND } from '../enums/constants';\nimport {\n    computeAxisDimensions,\n    setOffset,\n    registerChangeListeners,\n    calculateContinousSpace\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._rotationLock = false;\n        this._axisDimensions = {};\n        this._eventList = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        this._minTickDistance = dependencies.labelManager.getOriSize('ww');\n\n        generateGetterSetters(this, PROPS);\n        this.store(new Store({\n            domain: this.domain(),\n            range: this.range(),\n            config: simpleConfig,\n            mount: this.mount()\n        }));\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n\n        registerChangeListeners(this);\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     * @returns\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            this.scale().domain(domain[0]);\n            this._domain = this.scale().domain();\n            this.smartTicks(this.setTickConfig());\n            this.store().commit(DOMAIN, this._domain);\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            numberFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            let axis = axisClass(this.scale());\n            let formatter = {};\n\n            if (tickFormat) {\n                formatter = (val, ...params) => tickFormat(numberFormat(val), ...params);\n            } else {\n                formatter = val => numberFormat(val);\n            }\n            axis = axis.tickFormat(formatter);\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisTickLabels\n     * @param {*} labelWidth\n     * @returns\n     * @memberof SimpleAxis\n     */\n    setRotationConfig (axisTickLabels, labelWidth) {\n        const { orientation } = this.config();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            const range = this.range();\n            const length = Math.abs(range[0] - range[1]);\n            this.config({ labels: { rotation: 0 } });\n            if (length > 0 && axisTickLabels.length * (labelWidth + this._minTickDistance.width) > length) {\n                this.config({ labels: { rotation: -90 } });\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    adjustRange () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions () {\n        this.axisDimensions(computeAxisDimensions(this));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SimpleAxis\n     */\n    updateDomainBounds (domain) {\n        let currentDomain = this.domain();\n\n        if (currentDomain.length === 0) {\n            currentDomain = domain;\n        }\n        if (domain.length) {\n            currentDomain = [Math.min(currentDomain[0], domain[0]), Math.max(currentDomain[1], domain[1])];\n        }\n        return this.domain(currentDomain);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domain\n     * @returns\n     * @memberof SimpleAxis\n     */\n    updateDomainCache (domain) {\n        if (this._domainLock === false) {\n            this.domain([]);\n            this._domainLock = true;\n        }\n        return this.updateDomainBounds(domain || []);\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     * @returns\n     * @memberof SimpleAxis\n     */\n    setTickValues () {\n        const {\n            tickValues\n        } = this.config();\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        return this;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    registerEvent (event, fn) {\n        this._eventList.push({ name: event, action: fn });\n    }\n\n    /**\n     *\n     *\n     * @param {*} fn\n     * @memberof SimpleAxis\n     */\n    on (event, fn) {\n        event = event || 'update';\n        this.registerEvent(event, fn);\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    remove () {\n        this.store().unsubscribeAll();\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        this.store().unsubscribeAll();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport { DOMAIN } from '../enums/constants';\nimport {\n    getTickLabelInfo,\n    getNumberOfTicks\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n     /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ContinousAxis\n     */\n    updateDomainBounds (domain) {\n        let currentDomain = this.domain();\n\n        if (currentDomain.length === 0) {\n            currentDomain = domain;\n        }\n        if (domain.length) {\n            currentDomain = [Math.min(currentDomain[0], domain[0]), Math.max(currentDomain[1], domain[1])];\n        }\n        currentDomain = this._interpolator.sanitizeDomain(currentDomain, this);\n\n        return this.domain(currentDomain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.config();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     * @returns\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain && domain.length) {\n            const { nice } = this.config();\n            if (domain.length && domain[0] === domain[1]) {\n                domain = [0, +domain[0] * 2];\n            }\n            this.scale().domain(domain);\n            nice && this.scale().nice();\n            this._domain = this.scale().domain();\n            this.store().commit(DOMAIN, this._domain);\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        const {\n            left,\n            right,\n            top,\n            bottom\n        } = padding;\n        const {\n            orientation,\n            fixedBaseline\n        } = this.config();\n        const { tickLabelDim } = this.getAxisDimensions();\n        this.availableSpace({ width, height });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            const labelSpace = tickLabelDim.width;\n            this.range([(fixedBaseline ? 0 : (labelSpace / 2)) + left, width - right - labelSpace / 2]);\n            const axisHeight = this.getLogicalSpace().height;\n            isOffset && this.config({ yOffset: Math.max(axisHeight, height) });\n        } else {\n            const labelSpace = tickLabelDim.height;\n            this.range([height - bottom - (fixedBaseline ? 0 : (labelSpace / 2)), labelSpace / 2 + top]);\n            const axisWidth = this.getLogicalSpace().width;\n            isOffset && this.config({ xOffset: Math.max(axisWidth, width) });\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     * @returns\n     * @memberof SimpleAxis\n     */\n    setTickValues () {\n        const {\n            tickValues\n        } = this.config();\n        const axis = this.axis();\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = getTickLabelInfo(this).largestLabelDim;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domain\n     * @returns\n     * @memberof SimpleAxis\n     */\n    updateDomainCache (domain) {\n        if (this._domainLock === false) {\n            this._domain = [];\n            this._domainLock = true;\n        }\n        return this.updateDomainBounds(domain || []);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation,\n            labels\n        } = this.config();\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const { width, height } = this._axisDimensions.largestLabelDim;\n        axis.tickTransform((d, i) => {\n            if (i === 0 && (orientation === LEFT || orientation === RIGHT)) {\n                return `translate(0, -${(height) / 3}px)`;\n            }\n            if (i === 0 && (orientation === TOP || orientation === BOTTOM) && rotation === 0) {\n                return `translate(${width / 2}px,  ${0}px) rotate(${rotation}deg)`;\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} range\n     * @returns\n     * @memberof BandAxis\n     */\n    createScale (range) {\n        const scale = super.createScale(range);\n        const { padding } = this.config();\n        if (typeof padding === 'number') {\n            scale.padding(padding);\n        }\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     * @param {*} width\n     * @param {*} height\n     * @param {*} padding\n     * @param {*} isOffset\n     * @memberof BandAxis\n     */\n    setAvailableSpace (width, height, padding, isOffset) {\n        const {\n            left,\n            right,\n            top,\n            bottom\n        } = padding;\n        const {\n            orientation,\n            showAxisName,\n            axisNamePadding\n        } = this.config();\n        const { axisLabelDim } = this.getAxisDimensions();\n        const { height: axisDimHeight } = axisLabelDim;\n\n        this.availableSpace({ width, height });\n        if (orientation === TOP || orientation === BOTTOM) {\n            // Set x axis range\n            this.range([0, width - left - right]);\n            const axisHeight = this.getLogicalSpace().height - (showAxisName === false ?\n                (axisDimHeight + axisNamePadding) : 0);\n            isOffset && this.config({ yOffset: Math.max(axisHeight, height) });\n        } else {\n            // Set y axis range\n            this.range([height - bottom, top]);\n            const axisWidth = this.getLogicalSpace().width - (showAxisName === false ? axisDimHeight : 0);\n            isOffset && this.config({ xOffset: Math.max(axisWidth, width) });\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const { maxWidth, maxHeight } = this.config();\n        const { labelManager } = this._dependencies;\n        const domain = this.axis().scale().domain();\n        const axis = this.axis();\n\n        smartTicks = domain;\n        const tickFormatter = axis.tickFormat();\n\n        if (domain && domain.length) {\n            smartTicks = domain.map((d) => {\n                labelManager.useEllipsesOnOverflow(true);\n                smartlabel = labelManager.getSmartText(tickFormatter(d), maxWidth, maxHeight);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        return smartTicks;\n    }\n\n/**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n    /**\n     *\n     *\n     * @param {*} axisTickLabels\n     * @param {*} labelWidth\n     * @returns\n     * @memberof BandAxis\n     */\n    setRotationConfig (axisTickLabels, labelWidth) {\n        const { orientation } = this.config();\n        const range = this.range();\n        const availSpace = Math.abs(range[0] - range[1]);\n\n        this.config({ labels: { rotation: 0, smartTicks: false } });\n        if (orientation === TOP || orientation === BOTTOM) {\n            const smartWidth = this.smartTicks().reduce((acc, n) => acc + n.width + this._minTickDistance.width, 0);\n            // set multiline config\n            if (availSpace > 0 && axisTickLabels.length * (labelWidth + this._minTickDistance.width) > availSpace) {\n                if (availSpace && smartWidth < availSpace) {\n                    this.config({ labels: { smartTicks: true } });\n                } else {\n                    this.config({ labels: { rotation: -90 } });\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.config();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SimpleAxis\n     */\n    updateDomainBounds (domain) {\n        let currentDomain = this.domain();\n\n        if (currentDomain.length === 0) {\n            currentDomain = domain;\n        }\n        currentDomain = currentDomain.concat(domain);\n        currentDomain = currentDomain.sort();\n        this.domain(currentDomain);\n        return this;\n    }\n}\n","import SimpleAxis from './simple-axis';\nimport { adjustRange } from './helper';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { DOMAIN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     * @returns\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { maxWidth, maxHeight, tickFormat } = this.config();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n\n        smartTicks = domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n\n        if (domain && domain.length) {\n            smartTicks = domain.map((d) => {\n                smartlabel = labelManager.getSmartText(tickFormatter(d), maxWidth, maxHeight);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        return smartTicks;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            let axis = axisClass(this.scale());\n\n            if (tickFormat) {\n                axis = axis.tickFormat(tickFormat);\n            }\n\n            return axis;\n        }\n        return null;\n    }\n\n     /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.config();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     * @returns\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisTickLabels\n     * @param {*} labelWidth\n     * @returns\n     * @memberof BandAxis\n     */\n    setRotationConfig (axisTickLabels, labelWidth) {\n        const { orientation } = this.config();\n        const range = this.range();\n        const availSpace = Math.abs(range[0] - range[1]);\n\n        this.config({ labels: { rotation: 0, smartTicks: false } });\n        if (orientation === TOP || orientation === BOTTOM) {\n            const smartWidth = this.smartTicks().reduce((acc, n) => acc + n.width, 0);\n            // set multiline config\n            if (availSpace > 0 && axisTickLabels.length * labelWidth > availSpace) {\n                if (availSpace && smartWidth * 1.25 < availSpace) {\n                    this.config({ labels: { smartTicks: true } });\n                }\n                this.config({ labels: { rotation: -90 } });\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     * @returns\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            const { nice } = this.config();\n\n            if (domain.length && domain[0] === domain[1]) {\n                domain = [0, +domain[0] * 2];\n            }\n            this.scale().domain(domain);\n            nice && this.scale().nice();\n            this._domain = this.scale().domain();\n            this.smartTicks(this.setTickConfig());\n            this.store().commit(DOMAIN, this._domain);\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     *\n     *\n     * @param {*} width\n     * @param {*} height\n     * @param {*} padding\n     * @param {*} isOffset\n     * @memberof TimeAxis\n     */\n    setAvailableSpace (width, height, padding, isOffset) {\n        const {\n            left,\n            right,\n            top,\n            bottom\n        } = padding;\n        const {\n            orientation,\n            showAxisName,\n            axisNamePadding\n        } = this.config();\n        const domain = this.domain();\n        const { axisLabelDim, tickLabelDim } = this.getAxisDimensions();\n        const { height: axisDimHeight } = axisLabelDim;\n        const { height: tickDimHeight, width: tickDimWidth } = tickLabelDim;\n\n        this.availableSpace({ width, height });\n        if (orientation === TOP || orientation === BOTTOM) {\n            const labelSpace = tickDimWidth;\n            this.range(adjustRange(this._minDiff, [labelSpace / 2, width - left - right - labelSpace / 2],\n                domain, orientation));\n            const axisHeight = this.getLogicalSpace().height - (showAxisName === false ?\n                                            (axisDimHeight + axisNamePadding) : 0);\n            isOffset && this.config({ yOffset: Math.max(axisHeight, height) });\n        } else {\n            const labelSpace = tickDimHeight;\n            this.range(adjustRange(this._minDiff, [height - top - bottom - labelSpace / 2, labelSpace / 2],\n                domain, orientation));\n            const axisWidth = this.getLogicalSpace().width - (showAxisName === false ? axisDimHeight : 0);\n            this.isOffset && this.config({ xOffset: Math.max(axisWidth, width) });\n        }\n        return this;\n    }\n\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette } from './defaults';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%, \n    ${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n    }\n    if (detectColor(e) === 'hsl' || detectColor(e) === 'hsla') {\n        color = e.match(/(\\d+(\\.\\d+)?)/g);\n        color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n    } else if (detectColor(e) === 'hex') {\n        color = hexToHsv(e);\n    } else if (detectColor(e) === 'rgb') {\n        const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n        color = rgbToHsv(...col);\n    } else if (x11Colors[convertToXllString(e)]) {\n        color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n    } else if (typeof e !== 'string' && !(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === 'linear' && typeof config.interpolate !== 'boolean') {\n                config.interpolate = true;\n            }\n            const newConfig = mergeRecursive(defCon, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { hslInterpolator, piecewiseInterpolator, numberInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const rangeCycles = Math.floor((newStopsLength) / maxRangeLength);\n        for (let i = 0; i < rangeCycles; i++) {\n            newRange = [...newRange, ...range];\n        }\n        newRange = [...newRange, ...range.slice(0, (newStopsLength) % maxRangeLength)];\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst piecewiseDomain = (domain, stops, range) => {\n    let newRange = [];\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    const hslValues = range.map(e => getHslString(e));\n    const fn = piecewiseInterpolator()(hslInterpolator(), [...hslValues]);\n    newRange = retDomain.map(e => fn(e));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1], range: newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n* @returns\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n * @returns\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n\n    const { newRange } = rangeStops(newStops.length, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n * @returns\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @returns\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => piecewiseDomain,\n        value: () => normalRange\n\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     * @returns\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     * @returns\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain()) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const rgbArr = color.substring(4, color.length - 1)\n                            .replace(/ /g, '')\n                            .split(',');\n                return rgbToHsv(...rgbArr);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     * @returns\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        const scale = this.scale();\n        const range = scale.range ? scale.range() : null;\n        const domainRangeFn = this._colorStrategy.domainRange();\n        const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n        this.domain(scaleInfo.domain);\n        scaleInfo.range && this.scale().range(scaleInfo.range);\n        this.uniqueValues(scaleInfo.uniqueVals);\n        this.scale().domain(scaleInfo.scaleDomain || this.domain());\n\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        let h = color[0] * 360;\n        let s = color[1] * 100;\n        let l = color[2] * 100;\n        let a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n        h = newH > 360 ? newH - 360 : (newH < 0 ? newH + 360 : newH);\n        s = newS > 100 ? newS - 100 : (newS < 0 ? newS + 100 : newS);\n        l = newL > 100 ? newL - 100 : (newL < 0 ? newL + 100 : newL);\n        a = newA > 1 ? newA - 1 : (newA < 0 ? newA + 1 : newA);\n\n        return { color: `hsl(${h},${s}%,${l}%,${a})`, hsla: [h / 360, s / 100, l / 100, a] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n * @returns\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n * @returns\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @returns\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     * @returns\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n    }\n\n     /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     * @returns\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain) {\n        this.uniqueValues(domain);\n        this.domain(domain);\n        this.scale().domain(domain);\n\n        if (this.config().generator) {\n            this._generatedShapes = shapeGenerator(domain, this.config().generator);\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n * @returns\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    DATETIME: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.DATETIME]: ScaleType.TIME\n};\n\n","import { FieldType, DimensionSubtype } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport * as PROPS from '../../enums/props';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints } from '../../helpers/';\n\nconst BAND = ScaleType.BAND;\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n * @returns\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === FieldType.MEASURE || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n * @returns\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n  * Gets the width of each bar. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nconst getGroupWidth = (axis, minDiff) => {\n    let barWidth;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? barWidth = (Math.abs(range[1] - range[0])\n        / Math.abs(domain[1] - domain[0])) * minDiff :\n        (barWidth = width);\n\n    return barWidth;\n};\n\n/**\n * Gets the width and offset values of the bar.\n * Bar layer can be grouped or stacked based on which the width and offsetValues are\n * calculated.\n * @param { Axis } axis Axis instance needed for calculating the group width\n * @param { number } dataLen Number of data points\n * @param { string} transformType type of transform - group, stack\n * @param { number } innerPadding padding between bars.\n * @param {number} keys Series values\n * @return { Object } Width and offset of bars.\n */\nexport const getBarMeasurement = (axis, bandScale, config) => {\n    let width;\n    let offsetValues;\n    let actualGroupWidth;\n    let padding;\n    const scale = axis.scale();\n    const {\n        timeDiff,\n        transformType,\n        keys,\n        pad,\n        innerPadding\n    } = config;\n    const groupWidth = getGroupWidth(axis, timeDiff);\n    const isAxisBandScale = axis.constructor.type() === BAND;\n    const axisPadding = axis.config().padding;\n    // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n    // a band scale. The band scale will have range equal to width of one group of bars and\n    // the domain is set to series keys.\n    if (transformType === 'group') {\n        const groupPadding = isAxisBandScale ? 0 : axisPadding * groupWidth / 2;\n        bandScale.range([groupPadding, groupWidth - groupPadding])\n                        .domain(keys);\n        isAxisBandScale ? bandScale.paddingInner(innerPadding) : bandScale.paddingInner(innerPadding);\n        width = bandScale.bandwidth();\n        actualGroupWidth = groupWidth - (isAxisBandScale ? 0 : innerPadding * groupWidth);\n        offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupWidth / 2)));\n    } else if (pad !== undefined) {\n        let offset;\n        if (isAxisBandScale) {\n            const step = scale.step();\n            offset = scale.padding() * step;\n            width = scale.bandwidth() + offset;\n        } else {\n            width = groupWidth;\n        }\n        offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(width / 2)));\n    } else {\n        padding = isAxisBandScale ? 0 : axisPadding * groupWidth;\n        width = groupWidth - padding;\n        actualGroupWidth = width;\n        offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(width / 2)));\n    }\n\n    return {\n        width,\n        offsetValues,\n        groupWidth: actualGroupWidth,\n        padding: isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupWidth\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context._store.get(PROPS.MEASUREMENT);\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                meta\n            };\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport * as PROPS from '../../enums/props';\nimport './styles.scss';\nimport { getTranslatedPoints, getBarMeasurement } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n/**\n * Bar Layer creates a bar plot. It needs to be passed a data table, axes and configuration of the layer.\n *\n * @example\n * const BarLayer = layerFactory.getLayer('bar');\n * BarLayer.create()\n *  .config(config)\n *  .data(dt)\n *  .mountPoint(container);\n * @class\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     * @returns\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     * @returns\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const store = this._store;\n        const normalizedDataArr = store.get(PROPS.NORMALIZED_DATA);\n        const transformedData = store.get(PROPS.TRANSFORMED_DATA);\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-'),\n                    classnameFn: config.individualClassName\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     * @returns\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const config = this.config();\n        const axes = this.axes();\n        const transformType = this.transformType();\n        const fieldInfo = this.encodingFieldsInf();\n        const [barWidthMetrics, barHeightMetrics] = ['x', 'y'].map((type) => {\n            if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n                const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n                const timeDiff = isTemporal ? this.dataProps().timeDiffs[type] : 0;\n                return getBarMeasurement(axes[type], this._bandScale, {\n                    timeDiff,\n                    transformType,\n                    keys,\n                    pad: config[`pad${type.toUpperCase()}`],\n                    innerPadding: config.innerPadding\n                });\n            } return {};\n        });\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupWidth || 0,\n            y: barHeightMetrics.groupWidth || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.width,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.width,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === FieldType.MEASURE) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, +20, -20, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, -0, +30, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, -30, +30, 0]\n        }]\n    },\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport * as PROPS from '../../enums/props';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints } from '../../helpers';\n\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const individualClassName = this.config().individualClassName;\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this._store.get(PROPS.MEASUREMENT);\n        const colorAxis = axes.color;\n        const xbandwidth = xAxis ? xAxis.getUnitWidth() : 0;\n        const ybandwidth = yAxis ? yAxis.getUnitWidth() : 0;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x);\n                x0Px = xPx + xbandwidth;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y);\n                y0Px = yPx !== null ? yPx + ybandwidth : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ybandwidth / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xbandwidth / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xbandwidth;\n                yPx += ybandwidth / 2;\n                y0Px -= ybandwidth / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ybandwidth;\n                xPx += xbandwidth / 2;\n                x0Px -= xbandwidth / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    meta\n                };\n                if (individualClassName instanceof Function) {\n                    point.className = individualClassName(d, i);\n                }\n\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n}\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments.\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create();\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as CONSTANTS from './enums/constants';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [CONSTANTS.AREA_LAYER]: AreaLayer,\n    [CONSTANTS.ARC_LAYER]: ArcLayer,\n    [CONSTANTS.LINE_LAYER]: LineLayer,\n    [CONSTANTS.TEXT_LAYER]: TextLayer,\n    [CONSTANTS.POINT_LAYER]: PointLayer,\n    [CONSTANTS.TICK_LAYER]: TickLayer,\n    [CONSTANTS.BAR_LAYER]: BarLayer,\n    [CONSTANTS.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * @module\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: [],\n    [COLUMNS]: [],\n    [COLOR]: '',\n    [SHAPE]: '',\n    [SIZE]: '',\n    [DETAIL]: '',\n    [LAYERS]: '',\n    [TRANSFORM]: []\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n *\n *\n * @class ComposeVars\n * @extends {Variable}\n */\nclass ComposedVars extends Variable {\n\n    /**\n     *Creates an instance of ComposeVars.\n     * @param {*} texts\n     * @memberof ComposeVars\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof ComposeVars\n     */\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dm\n     * @returns\n     * @memberof ComposeVars\n     */\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposedVars\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposedVars\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import Variable from './variable';\n\n/**\n *\n *\n * @export\n * @class Vars\n * @extends {Variable}\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     *Creates an instance of Vars.\n     * @param {*} text\n     * @memberof Vars\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof Vars\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dm\n     * @returns\n     * @memberof Vars\n     */\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleVariable\n     */\n    numberFormat () {\n        const uid = this.data().getFieldsConfig()[this.oneVar()].index;\n        const formatter = this.data().getFieldspace().fields[uid]._ref;\n\n        return this.type() === 'measure' ? formatter.numberFormat() : val => val;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleVariable\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].getMinDiff();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n * @return\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n * @return\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @return\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @return\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @return\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     * @return\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    measure: ScaleType.LINEAR,\n    temporal: ScaleType.TIME\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n * @return\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        labels: { rotation: 0 },\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n * @return\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n * @return\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        if (!map.has(axisKey)) {\n            const xAxis = createSimpleAxis(axisConfig, field, axesCreators);\n            currentAxes.push(xAxis);\n        } else {\n            const axes = map.get(axisKey);\n            axes[axisIndex] = axes[axisIndex] ? axes[axisIndex] : createSimpleAxis(axisConfig, field, axesCreators);\n            axes[axisIndex]._rotationLock = false;\n            axes[axisIndex] && axes[axisIndex].config(axisConfig).domain(axisConfig.domain || []);\n        }\n    });\n\n    if (currentAxes.length) {\n        map.set(axisKey, currentAxes);\n    }\n\n    for (const [key] of map.entries()) {\n        if (key === axisKey) {\n            groupAxes.add(axisKey);\n        }\n    }\n    return map.get(axisKey);\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n * @return\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n * @return\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n * @return\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map((d) => {\n        if (d.def instanceof Array) {\n            return d.def.map(def => (def.axis ? {\n                y: { field: def.axis.y },\n                x: { field: def.axis.x }\n            } : def.encoding));\n        }\n        return d.def.encoding;\n    })).filter(d => d !== undefined);\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive } from 'muze-utils';\nimport { generateAxisFromMap, getDefaultMark, getIndex, getLayerConfFromFields } from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @return\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     * @return\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @return\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                configs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const def = layerConf.def;\n                        if (def instanceof Array) {\n                            configs[0].def.mark = mark;\n                            return {\n                                mark: layerConf.mark,\n                                def: def.map(conf => mergeRecursive(mergeRecursive({}, configs[0].def), conf))\n                            };\n                        }\n                        return mergeRecursive(mergeRecursive({}, configs[0]), layerConf);\n                    });\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     * @return\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.parentModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     * @return\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @returns\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @return\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @return\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     * @return\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            conf.encoding[axis] = conf.encoding[axis] || {};\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        def.encoding[axis] = encodingConfigs[axis] || {};\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     * @return\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, dataSelect, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, id, scaleType) => `${axisName}-axis-${id}-${scaleType}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n * @return\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n * @return\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n * @return\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((label, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n * @return\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n * @return\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d._ref.name === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n * @return\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n * @return\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n * @return\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nexport const createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map((conf) => {\n        if (conf.def instanceof Array) {\n            return conf.def.map(def => def.encoding);\n        }\n        return conf.def.encoding || {};\n    });\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","/**\n * This file exports variables that are used as defaults for the crosstab group.\n */\nexport const DATA_UPDATE_COUNTER = 0;\n\nexport const DEFAULT_LAYER_TYPE = 'cartesian';\n\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const primaryXAxisUpdated = 'primaryXAxisUpdated';\nexport const primaryYAxisUpdated = 'primaryYAxisUpdated';\nexport const secondaryXAxisUpdated = 'secondaryXAxisUpdated';\nexport const secondaryYAxisUpdated = 'secondaryYAxisUpdated';\nexport const TRANSFORM = 'transform';\nexport const DATADOMAIN = 'dataDomain';\nexport const LAYERSCREATED = 'layersCreated';\nexport const FIELDS = 'fields';\nexport const TIMEDIFFS = 'timeDiffs';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\n\n","import { FieldType, getDependencyOrder, getObjProp,\n    defaultValue, objectIterator, unionDomain, makeElement,\n    DimensionSubtype, getClosestIndexOf, toArray } from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layers = layerDefinitions.reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const instances = getLayerFromDef(context, definition, layersMap[markId]);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const encodingTransform = layer.config().encodingTransform || {};\n        const resolvable = encodingTransform.resolvable;\n\n        layerdeps[layer.alias()] = [];\n        if (resolvable) {\n            const resolved = resolvable(store);\n            const depArr = resolved.depArr;\n            layerdeps[layer.alias()] = depArr;\n            layer.encodingTransform(resolved.fn);\n        } else if (encodingTransform instanceof Function) {\n            layer.encodingTransform(encodingTransform);\n        }\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) : (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            if (layerDomain.x || layerDomain.y) {\n                domains = domainValues.reduce((fieldDomain, domain) => {\n                    const encodingType = domain[0];\n                    const field = encoding[encodingType].field;\n                    const axisIndex = layerAxisIndex[layerId][encodingType];\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n\n                    return fieldDomain;\n                }, domains);\n            } else { domains = domainValues; }\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            layer.measurement(measurement);\n            layer.dataProps({\n                timeDiffs: context.store().get(TIMEDIFFS)\n            });\n            layer.config().render !== false && layer.mount(group.node());\n        }\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField] && (fieldsConfig[xField].def.subtype ? fieldsConfig[xField].def.subtype :\n        fieldsConfig[xField].def.type);\n    const yFieldType = fieldsConfig[yField] && (fieldsConfig[yField].def.subtype ? fieldsConfig[yField].def.subtype :\n                fieldsConfig[yField].def.type);\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== FieldType.MEASURE && yFieldType !== FieldType.MEASURE)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return {\n        max,\n        min\n    };\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { GRIDLINEPARENTGROUPCLASS, GRIDBANDPARENTGROUPCLASS } from '../enums/constants';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === 'band' ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === 'band' && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === 'band') {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== 'band') {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === 'band' ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, context.axes()[axisType][0]));\n\n    return show ? getLayerDefinition(context, context.axes(), type, axisType) : undefined;\n}).filter(d => d !== undefined);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context, data) => {\n    const vuConf = context.config();\n    const dependencies = context._layerDeps;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n\n    ['band', 'line'].forEach((type) => {\n        let mark;\n        let config;\n        let instances;\n        if (type === 'band') {\n            mark = 'bar';\n            config = vuConf.gridBands;\n            instances = context._gridbands;\n        } else {\n            mark = 'tick';\n            config = vuConf.gridLines;\n            instances = context._gridlines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        definitions.forEach((atomicDef, i) => {\n            let layer;\n            const definition = atomicDef.definition;\n            const axesObj = atomicDef.axes;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            sConf.mark = mark;\n            if (!instances[i]) {\n                layer = layerFactory.getLayerInstance(sConf);\n                layer.dependencies(dependencies);\n            } else {\n                layer = instances[i];\n            }\n\n            layer.config(sConf)\n                            .measurement(measurement)\n                            .data(axesObj.y ? data.y : data.x)\n                            .dataProps({\n                                timeDiffs: context.store().get(TIMEDIFFS)\n                            })\n                            .axes(axesObj);\n            instances[i] = layer;\n        });\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const axes = context.axes();\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n\n    if (axes && ((axes.x && axes.x.length) || (axes.y && axes.y.length))) {\n        const gridBandData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        createGridLineLayer(context, gridBandData);\n        [[context._gridlines, `${classPrefix}-${GRIDLINEPARENTGROUPCLASS}`],\n            [context._gridbands, `${classPrefix}-${GRIDBANDPARENTGROUPCLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(container, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.mount(group.node());\n                    }\n                });\n            });\n    }\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const GRIDBANDPARENTGROUPCLASS = 'grid-bands';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, AXES, WIDTH, HEIGHT, MOUNT, TRANSFORM, FIELDS, DATA } from './enums/reactive-props';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null\n    },\n    [AXES]: {\n        value: null,\n        meta: {\n            sanitization: (axes, prevAxes) => Object.assign(prevAxes || {}, axes)\n        }\n    },\n    [WIDTH]: {\n        value: null\n    },\n    [HEIGHT]: {\n        value: null\n    },\n    [MOUNT]: {\n        value: null\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [FIELDS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    context.cachedData([data]);\n                }\n            }\n        }\n    }\n};\n","import { DimensionSubtype } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    createLayers,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers,\n    getLayerAxisIndex\n} from './helper';\n\nconst axisMap = {\n    0: 'primary',\n    1: 'secondary'\n};\nconst axisProps = [PROPS.primaryXAxisUpdated, PROPS.secondaryXAxisUpdated, PROPS.primaryYAxisUpdated,\n    PROPS.secondaryYAxisUpdated];\n\nexport const listenerMap = context => ([\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.AXES],\n        listener: ([, axes]) => {\n            ['x', 'y'].forEach((type) => {\n                const axesArr = axes[type] || [];\n                axesArr.forEach((axis, i) => {\n                    axis.on('update', () => {\n                        context.store().commit(PROPS[`${axisMap[i]}${axis.isReverse() ? 'Y' : 'X'}AxisUpdated`], true);\n                    });\n                });\n            });\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'computed',\n        props: [PROPS.LAYERSCREATED],\n        listener: fetch => fetch(PROPS.LAYERDEFS, PROPS.FIELDS, (layerDefs, fields) => {\n            const layerDefsValue = layerDefs.value;\n            const fieldsVal = fields.value;\n            if (layerDefsValue && fieldsVal) {\n                const layers = createLayers(context, layerDefs.value);\n                context.layers(layers);\n                context._layerAxisIndex = getLayerAxisIndex(context.layers(), fieldsVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'initialized', formalName: 'layer' });\n                return true;\n            }\n            return null;\n        })\n    },\n    {\n        type: 'computed',\n        props: [PROPS.TIMEDIFFS],\n        listener: fetch => fetch(PROPS.DATA, PROPS.FIELDS, PROPS.AXES, (data, fields, axes) => {\n            const dataModel = data.value;\n            const axisFields = fields.value;\n            const axesObj = axes.value;\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        axesObj[type][0].minDiff(timeDiffs[type]);\n                    }\n                });\n                return timeDiffs;\n            }\n            return null;\n        })\n    },\n    {\n        type: 'computed',\n        props: [PROPS.DATADOMAIN],\n        listener: fetch => fetch(PROPS.DATA, PROPS.LAYERSCREATED, PROPS.AXES, PROPS.TRANSFORM,\n            (dataModel, layersCreated, axes, transform) => {\n                const dataModelVal = dataModel.value;\n                const layerAxisIndexVal = context._layerAxisIndex;\n                const axesVal = axes.value;\n                if (dataModelVal && layersCreated.value && axesVal && layerAxisIndexVal) {\n                    const layers = context.layers();\n                    const dataModels = transformDataModels(transform.value, dataModelVal);\n                    context._transformedDataModels = dataModels;\n                    context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                    attachDataToLayers(layers, dataModelVal, context._transformedDataModels);\n                    context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                        dataModelVal.getFieldsConfig(), context.retinalFields());\n                    attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                    context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n                    return unionDomainFromLayers(layers, context.fields(),\n                        layerAxisIndexVal, dataModelVal.getFieldsConfig());\n                }\n                return null;\n            })\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATADOMAIN],\n        listener: ([, dataDomain]) => {\n            dataDomain !== null && context.updateAxisDomain(dataDomain);\n        }\n    },\n    {\n        type: 'registerChangeListener',\n        props: [PROPS.MOUNT, PROPS.DATA, ...axisProps],\n        listener: (mount, data) => {\n            const container = mount[1];\n            if (container && data[1]) {\n                context.render(container);\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, STORE, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [STORE]: {},\n    [CACHED_DATA]: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { DATA, MOUNT } from '../enums/reactive-props';\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    queuedSideEffects.forEach((sideEffect) => {\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = [];\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([DATA, MOUNT], (dataModel, mount) => {\n        const dm = dataModel[1];\n\n        if (dm && mount[1]) {\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.attachPropagationListener(originalData);\n        }\n    }, true);\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                firebolt.initializeSideEffects();\n                firebolt.config(context.config().interaction);\n                firebolt.mapActionsAndBehaviour();\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        payload.criteria = !sourceIdentifiers ? null : [schema.map(d => d.name), ...data];\n        return payload;\n    }\n};\n\n","import { isSimpleObject } from 'muze-utils';\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFields = config.propagationFields[action] || [];\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEffects = config.sideEffects;\n    const mutableEffect = [].concat(...Object.values(sideEffects).map(d => d.effects)).find(sideEffect =>\n        instance._sideEffects[sideEffect.name || sideEffect].constructor.mutates(true));\n    const mergedModel = selectionSet.mergedEnter.model;\n\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        const fields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(fields) : null;\n    } else {\n        const criteriaFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(criteriaFields) : null;\n    }\n\n    propagationFields.length && propagationData && (propagationData = propagationData.project(propagationFields));\n    dataModel.addToPropNamespace(sourceId, {\n        payload,\n        criteria: propagationData,\n        isMutableAction: mutableEffect,\n        actionName: mutableEffect ? (mutableEffect.name || mutableEffect) : action\n    });\n    dataModel.propagate(propagationData, payload, {\n        isMutableAction: mutableEffect,\n        sourceId\n    });\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt, SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const actionOnSource = sourceUnitId === unitId;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                if (!actionOnSource && payload.criteria !== null) {\n                    return !sourceSideEffects[se.name || se];\n                }\n                if (propagationSourceCanvas === aliasName) {\n                    return d.applyOnSource !== false;\n                }\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    enableSideEffectOnPropagation (sideEffect) {\n        this._sourceSideEffects[sideEffect] = false;\n        return this;\n    }\n\n    disableSideEffectOnPropagation (sideEffect) {\n        this._sourceSideEffects[sideEffect] = true;\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            let isSourceFieldPresent = true;\n            const data = propValue.data;\n            const propPayload = propValue.payload;\n            const sourceIdentifiers = propValue.sourceIdentifiers;\n            const action = propPayload.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n            const payload = payloadFn(this.context, data, propValue);\n            const sideEffects = this._behaviourEffectMap[action];\n            const mutableEffect = sideEffects.find(sideEffect =>\n                this._sideEffects[sideEffect.name || sideEffect].constructor.mutates(true));\n            const propagationInf = {\n                propagate: false,\n                data,\n                propPayload,\n                sourceIdentifiers,\n                persistent: false,\n                isSourceFieldPresent,\n                sourceId: propValue.sourceId\n            };\n            this._actionHistory[action] = {\n                payload,\n                propagationInf,\n                isMutableAction: mutableEffect\n            };\n            this.dispatchBehaviour(action, payload, propagationInf);\n        };\n    }\n\n    initializeSideEffects () {\n        super.initializeSideEffects();\n        const sideEffects = this.sideEffects();\n        for (const key in sideEffects) {\n            if ({}.hasOwnProperty.call(sideEffects, key)) {\n                sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                    const context = this.context;\n                    return context.getDrawingContext();\n                });\n            }\n        }\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    CommonProps,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    Store,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    FieldType\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    attachAxisToLayers,\n    getLayerAxisIndex,\n    createSideEffectGroup,\n    getAdjustedDomain\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap } from './listener-map';\nimport {\n    primaryYAxisUpdated,\n    primaryXAxisUpdated,\n    secondaryXAxisUpdated,\n    secondaryYAxisUpdated,\n    DATADOMAIN,\n    TIMEDIFFS\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * @module VisualUnit\n * A hierarchical component of renderer which manages multiple layers. This logical\n * module is responsible for layouting layers, attach axis with them, resolving conflicts of layers.\n */\n\n/**\n * Basic unit implementaiton\n * @class VisualUnit\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit\n     * @param registry {Object} Component registry\n     * @param dependencies {Object} Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                onlayerdraw: false\n            }),\n            smartLabel: dependencies.smartLabel\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridlines = [];\n        this._gridbands = [];\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.cachedData([]);\n        this.store(new Store({\n            [primaryXAxisUpdated]: null,\n            [primaryYAxisUpdated]: null,\n            [secondaryXAxisUpdated]: null,\n            [secondaryYAxisUpdated]: null\n        }));\n        transactor(this, localOptions, this.store().model);\n        this.firebolt(new UnitFireBolt(this, {\n            physical: physicalActions,\n            behavioural: behaviouralActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap));\n        registerListeners(this, listenerMap);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof VisualUnit\n     */\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof VisualUnit\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Gets the domain for all axes of this visual unit.\n     * @return {Object} Domains of each data field.\n     */\n    getDataDomain () {\n        return this.store().get(DATADOMAIN);\n    }\n\n    /**\n     * Retrieves the id created for this instance of visual unit\n     * @return {string} id associated with the instance\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: this.parentContainer(),\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.store().get('axes').map(axis => axis.serialize())\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerDef\n     * @returns\n     * @memberof VisualUnit\n     */\n    addLayer (layerDef) {\n        const layerName = layerDef.name;\n        const layer = this.getLayerByName(layerName);\n        const measurement = {\n            width: this.width(),\n            height: this.height()\n        };\n\n        if (layer) {\n            return [layer];\n        }\n        const serializedDef = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n        const instances = Object.values(getLayerFromDef(this, serializedDef));\n        this.layers().push(...instances);\n        const layerAxisIndex = getLayerAxisIndex(instances, this.fields());\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, layerAxisIndex);\n        attachAxisToLayers(this.axes(), instances, layerAxisIndex);\n        this.layers().forEach((lyr) => {\n            lyr.measurement(measurement);\n            lyr.dataProps({\n                timeDiffs: this.store().get(TIMEDIFFS)\n            });\n        });\n        return instances;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribeAll();\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     * @returns\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName, arcLayerClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`, `.${classPrefix}-${arcLayerClassName} path`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @returns\n     * @memberof VisualUnit\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} name\n     * @returns\n     * @memberof VisualUnit\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     *\n     *\n     * @param {*} domain\n     * @returns\n     * @memberof VisualUnit\n     */\n    updateAxisDomain (domain) {\n        ['x', 'y'].forEach((type) => {\n            const axes = this.axes()[type];\n            let min = [];\n            let max = [];\n            let dom;\n            axes && axes.forEach((axis, i) => {\n                const field = this.fields()[type][i];\n                dom = domain[`${this.fields()[type][i]}`];\n\n                if (field.type() !== FieldType.DIMENSION && dom) {\n                    min[i] = dom[0];\n                    max[i] = dom[1];\n                }\n            });\n            if (axes) {\n                if (axes.length > 1) {\n                    const axisConf = axes[0].config();\n                    if (axes[0].constructor.type() === 'linear') {\n                        if (axisConf.alignZeroLine) {\n                            axes.forEach(axis => axis.config({\n                                nice: false\n                            }));\n                            const adjustedDomain = getAdjustedDomain(max, min);\n                            min = adjustedDomain.min;\n                            max = adjustedDomain.max;\n                        }\n\n                        axes[0].updateDomainCache([min[0], max[0]]);\n                        axes[1].updateDomainCache([min[1], max[1]]);\n                    } else {\n                        axes[0].updateDomainCache(dom);\n                        axes[1].updateDomainCache(dom);\n                    }\n                } else {\n                    axes[0].updateDomainCache(dom);\n                }\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Finds the nearest point closest to the x and y position.\n     * @param {number} x x position.\n     * @param {number} y y position.\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y, args) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && args.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, args);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, args) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     * @returns\n     * @memberof VisualUnit\n     */\n    getPlotPointsFromIdentifiers (identifiers) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {*} name\n     * @returns\n     * @memberof VisualUnit\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @returns\n     * @memberof VisualUnit\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n\n    parentContainer (...container) {\n        if (container.length) {\n            this._parentContainer = container[0];\n\n            return this;\n        }\n        return this._parentContainer;\n    }\n}\n","import { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n * @return\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n * @return\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, fieldInfo, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacetFieldNames, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = (dme.constructor && dme.constructor.name === 'DataModel') ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    createSelection,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n * @return\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP\n            });\n        }\n        return new cells.BlankCell();\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n * @return\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facetConfig\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys, (keySet, i) =>\n        `${keySet.join(',')}-${i}`).map(keySet => createTextCells(null, keySet, cells, labelManager)\n                        .map((cell, k, i) => cell.source(keySet[i]).config(facetConfig || {})));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facetConfig,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facetConfig = facetConfig.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facetConfig = facetConfig.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facetConfig,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facetConfig,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders].map(e => (e ? e.getObjects()\n                    .map(f => f.getObjects()) : []));\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.groupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facetConfig: globalConfig.facetConfig || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n            entryCellMap\n        } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        groupedModel = datamodel.groupBy(dimensions, aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n    resolver.createUnits(componentRegistry, config);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const { rows, columns, selectionObj } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = {};\n        this._projections = {};\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    dependencies (...dep) {\n        if (dep.length) {\n            this._dependencies = dep[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    units (...unitArr) {\n        if (unitArr.length) {\n            this._units = unitArr[0];\n            return this;\n        }\n        return this._units;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} layer configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    layerConfig (...config) {\n        if (config.length) {\n            this._layerConfig = config[0];\n            return this;\n        }\n        return this._layerConfig;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    matrixLayers (...layers) {\n        if (layers.length) {\n            this._matrixLayers = layers[0];\n            return this;\n        }\n        return this._matrixLayers;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    datamodelTransform (...transform) {\n        if (transform.length) {\n            this._datamodelTransform = transform[0];\n            return this;\n        }\n        return this._datamodelTransform;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    rowCells (...cells) {\n        if (cells.length) {\n            this._rowCells = cells[0];\n            return this;\n        }\n        return this._rowCells;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    colCells (...cells) {\n        if (cells.length) {\n            this._colCells = cells[0];\n            return this;\n        }\n        return this._colCells;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    rowMatrix (...rowMat) {\n        if (rowMat.length) {\n            this._rowMatrix = rowMat[0];\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    columnMatrix (...colMat) {\n        if (colMat.length) {\n            this._columnMatrix = colMat[0];\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    valueMatrix (...valMat) {\n        if (valMat.length) {\n            this._valueMatrix = valMat[0];\n            return this;\n        }\n        return this._valueMatrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     * @return\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     * @return\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     * @return\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                el.source(unit);\n                units.push(unit);\n            }\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.groupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @return\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     * @return\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], TextCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], TextCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(() => new BlankCell()) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(() => new BlankCell()) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(() => new BlankCell()) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(() => new BlankCell()) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     * @return\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n}\n","/**\n *\n *\n * @export\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     *Creates an instance of ValueMatrix.\n     * @param {*} matrixArr\n     * @memberof ValueMatrix\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr);\n        this.filter(() => true);\n\n        this.each((el) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = cellValue;\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    /**\n     *\n     *\n     * @param {*} id\n     * @return\n     * @memberof ValueMatrix\n     */\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     *\n     *\n     * @param {*} m\n     * @return\n     * @memberof ValueMatrix\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fn\n     * @return\n     * @memberof ValueMatrix\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof ValueMatrix\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof ValueMatrix\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fn\n     * @return\n     * @memberof ValueMatrix\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} id\n     * @return\n     * @memberof ValueMatrix\n     */\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof ValueMatrix\n     */\n    getMatrixArray () {\n        return this.matrix();\n    }\n}\n\nexport default ValueMatrix;\n","import { RetinalEncoder } from '../encoder';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { getEncoder, getBorders } from '../group-helper';\nimport ValueMatrix from './value-matrix';\nimport localOptions from './local-options';\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\n/**\n *\n *\n * @param {*} placeholder\n * @memberof VisualGroup\n */\nconst setMatrixInstances = (context, placeholder) => {\n    context._composition.matrices = {\n        value: new ValueMatrix(placeholder.values),\n        left: new ValueMatrix(placeholder.rows[0]),\n        right: new ValueMatrix(placeholder.rows[1]),\n        top: new ValueMatrix(placeholder.columns[0]),\n        bottom: new ValueMatrix(placeholder.columns[1])\n    };\n    return context;\n};\n\n/**\n *\n *\n * @param {*} context\n * @returns\n */\nexport const setupChangeListeners = (context) => {\n    context.store().registerImmediateListener([...Object.keys(localOptions), DATA_UPDATE_COUNTER], (...params) => {\n        const datamodel = context.data();\n        const [config, rows, columns, color, shape, size, detail, layers, transform] = params;\n\n        if (datamodel && rows[1] && columns[1]) {\n            // Get the resolver for the matrices\n            const resolver = context.resolver();\n            // Prepare configuration for matrix preparation\n            let matrixConfig = {\n                selection: context.selection(),\n                alias: context.alias(),\n                globalConfig: config[1] || {},\n                rows: rows[1],\n                columns: columns[1],\n                detail: detail[1],\n                layers: layers[1],\n                transform: transform[1]\n            };\n\n            const retinalConfig = sanitizeRetinalConfig({\n                color: color[1],\n                shape: shape[1],\n                size: size[1]\n            });\n\n            matrixConfig = Object.assign(matrixConfig, retinalConfig);\n            // Create the encoders for the group\n            const encoders = {};\n            encoders.retinalEncoder = new RetinalEncoder();\n            encoders.simpleEncoder = getEncoder(layers[1]);\n\n            // Set the group type\n            context.groupType(encoders.simpleEncoder.constructor.type());\n\n            // Get sanitized fields as instances of the Vars Class\n            const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n            encoders.simpleEncoder.setAxisAndHeaders(config[1] ? config[1].axisFrom : {}, fields);\n            // Setting layers for the code\n            layers[1] && resolver.layerConfig(layers[1]);\n            // Set the row and column axes\n            resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n            // Getting the placeholders\n            const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n            context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n            // Set the selection object\n            context.selection(placeholderInfo.selection);\n\n            // Create retinal axes\n            resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n                encoders);\n\n            // Domains are evaluated for each of the axes for commonality\n            resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n            // Create matrix instances\n            setMatrixInstances(context, placeholderInfo);\n\n            // Prepare corner matrices\n            context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields));\n\n             // Set placeholder information\n            context.placeholderInfo(placeholderInfo);\n\n            context._composition.axes = resolver.axes();\n            context.metaData({\n                border: getBorders(placeholderInfo, encoders.simpleEncoder)\n            });\n        }\n        return context;\n    });\n    return context;\n};\n","import { DATA_UPDATE_COUNTER } from '../enums/defaults';\n\nexport const PROPS = {\n    alias: {},\n    data: {\n        sanitization: (context, value) => {\n            if (context._data !== value) {\n                const store = context.store();\n                let hasDataUpdated = store.get(DATA_UPDATE_COUNTER);\n                store.commit(DATA_UPDATE_COUNTER, ++hasDataUpdated);\n            }\n            return value;\n        }\n    },\n    cornerMatrices: {},\n    groupType: {},\n    matrixInstance: {},\n    metaData: {},\n    placeholderInfo: {},\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    store: {}\n};\n","import { transactor, generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    initStore,\n    findInGroup\n} from '../group-helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * This class is used to create an instance of a visual group.\n * It extends the SimpleGroup (which is an interface). The visual group takes in a datamodel,\n * and a set of rows and columns, alongwith optional paramters (like color, size, shape).\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        // Populate the store with default values\n        this.store(initStore());\n\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // matrix instance store each of the matrices\n        this._matrixInstance = {};\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // stores info about the placeholders generated after creation of matrices\n        this._placeholderInfo = {};\n        // corner matrices are the headers/footers for the application\n        this._cornerMatrices = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n        // Add local options to the store\n        transactor(this, localOptions, this.store().model);\n        // Register listeners\n        setupChangeListeners(this);\n    }\n\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of the Group\n     *\n     * @readonly\n     * @memberof VisualGroup\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} variable\n     * @return\n     * @memberof VisualGroup\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @return\n     * @memberof VisualGroup\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualGroup\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    /**\n     *\n     *\n     * @param {*} channel\n     * @return\n     * @memberof VisualGroup\n     */\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facetKey\n     * @return\n     * @memberof VisualGroup\n     */\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facetKey\n     * @return\n     * @memberof VisualGroup\n     */\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    metaData.addToPropNamespace(`legend-${sourceId}`, {\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        actionName: propPayload.action\n    });\n    metaData.propagate(propagationData, propPayload, {\n        isMutableAction,\n        sourceId\n    });\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter),\n                    axisScale.invert(endPos[axisType] + rangeShifter)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter),\n                        axisScale.invert(endPos[axisType] + rangeShifter)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = icon => icon && getSymbol(icon);\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n * @returns\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n * @returns\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) =>\n                makeElement(container, 'div', [1], `${config.classPrefix}-legend-title`)\n                                .style(WIDTH, '100%')\n                                .style(HEIGHT, `${measurement.height}px`)\n                                .style('padding-left', `${measurement.padding}px`)\n                                .style('padding-right', `${measurement.padding}px`)\n                                .style('border-bottom-width', `${measurement.border}px`)\n                                .style('text-align', title.orientation instanceof Function ?\n                                        title.orientation(config.position) : title.orientation)\n                                .text(title.text)\n                                .node();\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n * @return\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n * @return\n */\nexport const getItemMeasures = (data, prop, labelManager) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(value);\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n * @return\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (data[i].size ? 2 * Math.sqrt(data[i].size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, data[i].size ? 2 * Math.sqrt(data[i].size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width, titleWidth);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = maxItemSpaces.width - maxIconWidth;\n                totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n            }\n        }\n    });\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n * @returns\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     * @return\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n           width,\n           height,\n           maxWidth,\n           maxHeight,\n           padding,\n           margin,\n           border\n       } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height * 1.25 : 0;\n        const titleWidth = titleSpace.width;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                 `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding } = this.measurement();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            border,\n            padding\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix\n        } = this.config();\n        const {\n           maxWidth,\n           maxHeight,\n           width,\n           height,\n           margin,\n           border\n       } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border-width', `${border}px`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     * @returns\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                maxItemSpaces,\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${maxItemSpaces.width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n /**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        makeElement(svg, 'path', [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('d', icon)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n * @return\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n * @returns\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n        legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n        legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n    }\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            type,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(d[1])\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon(icon, selectElement(this), d, {\n                classPrefix,\n                iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(d[1]);\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     * @returns\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n * @returns\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n * @returns\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n * @returns\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickLabelDim;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${height}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendRect.attr('height', gradientDimensions.height);\n    legendRect.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     * @returns\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     * @returns\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     * @return\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     * @returns\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     * @returns\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     * @return\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @returns\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables.\n * @param {Array} vars Variable names\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n * @returns\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted\n * string according to the allowed html tags.\n *\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","class ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    registerPhysicalActions (action) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerPhysicalActions(action));\n            });\n        });\n        return this;\n    }\n\n    registerBehaviouralActions (...actions) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then(() => {\n                const matrix = canvas.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerBehaviouralActions(...actions));\n            });\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} map\n     * @returns\n     * @memberof ActionModel\n     */\n    registerPhysicalBehaviouralMap (map) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerPhysicalBehaviouralMap(map));\n            });\n        });\n        return this;\n    }\n\n    mapSideEffects (map) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then(() => {\n                const matrix = canvas.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().mapSideEffects(map));\n            });\n        });\n        return this;\n    }\n\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    registerSideEffects (...sideEffects) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerSideEffects(sideEffects));\n            });\n        });\n\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().dissociateBehaviour(behaviour, physicalAction));\n            });\n        });\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().dissociateBehaviour(sideEffect, behaviour));\n            });\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 2,\n            margin: 2,\n            border: 1,\n            height: 30,\n            width: 30\n        },\n        shape: {\n            show: true,\n            padding: 2,\n            margin: 2,\n            border: 1,\n            height: 30,\n            width: 30\n        },\n        size: {\n            show: true,\n            padding: 2,\n            margin: 2,\n            border: 1,\n            height: 30,\n            width: 30\n        }\n    },\n    showHeaders: false,\n    minWidth: 300,\n    minHeight: 200,\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    groupBy: {\n        disabled: false\n    }\n};\n","/**\n * @module\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n */\n\nimport { intSanitizer, mergeRecursive } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'DataModel'\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 150,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 150,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                const oldConf = mergeRecursive({}, oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     * @memberof GenericLayout\n     *\n     * measurement : {\n     *      width : number => width of the container\n     *      height : number => height of the container\n     *      unitHeight : number => height of unit of the cells\n     *      unitWidth : number => width of unit of the cells\n     * }\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n    VIEW_INDEX, TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n        if (type !== CENTER) {\n            containerForMatrix.style(WIDTH, `${dimensions.viewWidth[index]}px`);\n            containerForMatrix.style(HEIGHT, `${dimensions.viewHeight[VIEW_INDEX[type]]}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(0, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n *\n *\n * @param {*} matrix\n * @param {*} start\n * @param {*} end\n */\nconst splitMatrices = (matrix, start, end) => matrix.map(arr => arr.slice(start, end));\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        breakPage,\n        gutterSpace,\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    let newCenter = [];\n    let newBottom = [];\n    let newTop = [];\n\n    const gutter = layoutDimensions.viewHeight[1] * gutterSpace.rows[breakPage.rows[0] - 1];\n    const breakLength = breakPage.rows.length;\n\n    if (breakPage.rows.length > 0 && Math.max(center[0].length, center[2].length) <= breakPage.rows[breakLength - 1]) {\n        let prev = 0;\n        const topBreak = top[1].length / breakLength;\n        const bottomBreak = bottom[1].length / breakLength;\n        breakPage.rows.forEach((e, i) => {\n            newTop[i] = splitMatrices(top, i * topBreak, (i + 1) * topBreak);\n            newCenter[i] = splitMatrices(center, prev, e);\n            newBottom[i] = splitMatrices(bottom, i * bottomBreak, (i + 1) * bottomBreak);\n            prev = e;\n        });\n    } else {\n        newTop = [top];\n        newCenter = [center];\n        newBottom = [bottom];\n    }\n    // makeElement(mount, 'div', newCenter, `${classPrefix}-grid-layout`)\n    mount.each(function (d, i) {\n        renderMatrix(newTop[i], selectElement(this), TOP, layoutDimensions, classPrefix);\n        renderMatrix(newCenter[i], selectElement(this), CENTER, layoutDimensions, classPrefix);\n        renderMatrix(newBottom[i], selectElement(this), BOTTOM, layoutDimensions, classPrefix);\n    })\n                    .style(WIDTH, `${Math.ceil(width)}px`)\n                    .style('margin-bottom', (d, i) => {\n                        if (i !== newBottom.length - 1) { return `${Math.floor(gutter)}px`; }\n                        return 0;\n                    });\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n * @returns\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n * @returns\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.logicalSpace(null);\n            const space = placeholder.getLogicalSpace();\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                return (availableWidth * distribution[colIndex] / distSum) - 2;\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                return (availableWidth / rowLen) - 2;\n            }\n        }\n        return (space + (availableWidth - width) * (space / width)) - 2;\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                return (heightWithoutGutter * distribution[rIdx] / distSum) - 2;\n            } else if (isDistributionEqual || context.height === 0) {\n                return (heightWithoutGutter / colLen) - 2;\n            }\n        }\n        return (space + (heightWithoutGutter - height) * (space / height)) - 2;\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport {\n    createTree,\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    getDistributedWidth,\n    spaceTakenByRow,\n    computeLogicalSpace,\n    createMatrixEachLevel,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { COLUMN_ROOT, ROW_ROOT, HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._breakPointer = this.config().isTransposed ? matrix[0].length :\n            (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: this.config().isTransposed ? COLUMN_ROOT : ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.setLogicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @return\n     * @memberof VisualMatrix\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    setLogicalSpace () {\n        const {\n            isTransposed\n        } = this.config();\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, isTransposed);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistribute(this.viewableMatrix, width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        let j;\n        const { height, width } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, Math.max(i, j));\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistribute (viewableMatrix, width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const {\n            isTransposed\n        } = this.config();\n\n        viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = isTransposed ? this.redistributeColumnWise(options) : this.redistributeRowWise(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        const measurements = viewableMatrix.map((matrixInst, i) => {\n            let heightMeasures;\n            let columnMeasures;\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { heights, widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n\n            if (!isTransposed) {\n                heightMeasures = [height, height];\n                columnMeasures = widths;\n            } else {\n                heightMeasures = heights;\n                columnMeasures = [width, width];\n            }\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n\n        return measurements;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableData () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        if (!isTransposed) {\n            tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n        } else {\n            tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n        }\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} options Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeRowWise (options) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, width, height, maxHeights, maxWidths } = options;\n\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        if (maxWidth > 0) {\n            cWidths = maxMeasures.map(space => space + (width - maxWidth) * (space / maxWidth));\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        maxWidths.push(cWidths);\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} options Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeColumnWise (options) {\n        let rHeights = [];\n        const { matrix, width, maxHeights, maxWidths } = options;\n        const borderWidth = this.config().unitMeasures.border;\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace().height;\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, col.getLogicalSpace().height);\n        }));\n\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n\n        maxHeights.push(rHeights);\n\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} options cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (options) {\n        let indices = [];\n        let unitMeasures = [];\n        let mainMeasures = [];\n        let computedMeasures = [];\n        const {\n            isTransposed,\n            unitMeasures: measures\n        } = this.config();\n        const borderWidth = measures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = options;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                if (!isTransposed) {\n                    cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n                    indices = [rIdx, cIdx];\n                    unitMeasures = [columnWidths, rowHeights];\n                    mainMeasures = [widths, heights];\n                    computedMeasures = [colWidth, colHeight];\n                } else {\n                    cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n                    indices = [cIdx, rIdx];\n                    unitMeasures = [rowHeights, columnWidths];\n                    mainMeasures = [heights, widths];\n                    computedMeasures = [colHeight, colWidth];\n                }\n\n                if (indices[0] === 0 && indices[1] < breakPointer) {\n                    unitMeasures[0][0][indices[1]] = computedMeasures[0];\n                    mainMeasures[0][0] = (mainMeasures[0][0] || 0) + computedMeasures[0];\n                } else if (indices[0] === 0 && indices[1] >= breakPointer) {\n                    unitMeasures[0][1][indices[1] - breakPointer] = computedMeasures[0];\n                    mainMeasures[0][1] = (mainMeasures[0][1] || 0) + computedMeasures[0];\n                }\n                if (indices[1] === this._lastLevelKey) {\n                    unitMeasures[1][0][indices[0]] = computedMeasures[1];\n                    unitMeasures[1][1][indices[0]] = computedMeasures[1];\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\n/**\n *\n *\n * @param {*} matrix\n * @param {*} widths\n * @param {*} heights\n */\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} layout\n * @param {*} matrix\n * @param {*} pointer\n * @returns\n */\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Set width for column matrix\n\n    const columnMatrixWidth = width - rowMatrixWidth;\n    setMatrixMeasurement(columnMatrix, WIDTH, columnMatrixWidth);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    setMatrixMeasurement(rowMatrix, HEIGHT, rowMatrixHeight);\n\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableData();\n    const columnMatrices = columnMatrix.getViewableData();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowMatrixWidth = rowMatrix.getViewableSpaces()[rowPointer].width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const columnMatrixHeight = columnMatrix.getViewableSpaces()[columnPointer].height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = height - (topHeight + bottomHeight);\n    const centerWidth = width - (leftWidth + rightWidth);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     *\n     * measurement : {\n     *      width : number => width of the container\n     *      height : number => height of the container\n     *      unitHeight : number => height of unit of the cells\n     *      unitWidth : number => width of unit of the cells\n     * }\n     *\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @param {*} pageNumber\n     * @returns\n     * @memberof GridLayout\n     */\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.getViewInformation();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @returns\n     * @memberof GridLayout\n     */\n    pages (type) {\n        const { viewMatricesInfo } = this.getViewInformation();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo = {\n            viewMatricesInfo,\n            layoutDimensions\n        };\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    getViewInformation () {\n        return this.viewInfo;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const {\n            viewMatricesInfo,\n            layoutDimensions\n        } = this.getViewInformation();\n        // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import VisualMatrix from '../visual-matrix/visual-matrix';\n\n/**\n * Generates the set of visual matrices for pagination and layouting algorithms\n *\n * @param {*} context\n * @param {*} matrices\n * @returns\n */\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n    context.rowMatrix(new VisualMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new VisualMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: CONSTANTS.TOP,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {}\n};\n\nexport const PROPS = {\n    [TEXT]: DEFAULT_PROPS,\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n        this.source().setAvailableSpace(width, height, margin, isOffset);\n        this.logicalSpace(null);\n        this.source().logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n\n        this.mount(mount);\n        if (availWidth === 0 || !availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (availHeight === 0 || !availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? availWidth : 0}px`)\n                        .style(HEIGHT, `${show ? availHeight : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        const {\n            spaceFixer\n        } = this.config();\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || spaceFixer,\n                height: this.height || spaceFixer\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const space = labelManager.getOriSize(context.source());\n    const {\n       margin,\n        show\n   } = context.config();\n\n    labelManager.setStyle(context._computedStyle);\n    if (show) {\n        return {\n            width: space.width + margin.left + margin.right + context._minTickDiff.width,\n            height: space.height + margin.top + margin.bottom + context._minTickDiff.height\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        this._minTickDiff = this._dependencies.labelManager.getOriSize('WW');\n\n        generateGetterSetters(this, PROPS[TEXT]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n\n            container.style('vertical-align', verticalAlign);\n            elem.classed(this._className, true);\n            // apply style on the returned element\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            elem.html(this.source());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n * @returns\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} rawContent\n * @returns\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n * @returns\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content\n    } = config;\n    const cell = prevCell || new TextCell({ type: cellType }, { labelManager });\n\n    cell.source(content);\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n * @returns\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type === 'title' ? 'header' : 'text',\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight > 200 && canvasWidth > 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.content = content;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, CONFIG\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @returns\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field) {\n            const {\n                type,\n                step\n            } = scale.config();\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n * @returns\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, CONFIG].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n * @returns\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n * @returns\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { cellRegistry } from '@chartshq/visual-cell';\nimport { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\n\nconst BlankCell = cellRegistry().get().BlankCell;\n\nconst createBlankCell = () => new BlankCell();\n\n/**\n *\n *\n * @param {*} canvases\n * @returns\n */\nconst getMaxRows = (rows) => {\n    const maxRows = [0, 0];\n\n    maxRows[0] = Math.max(maxRows[0], rows[0].length ? rows[0][0].length : 0);\n    maxRows[1] = Math.max(maxRows[1], rows[1].length ? rows[1][0].length : 0);\n    return maxRows;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} value\n */\nconst fillArray = (arr, value) => arr.map(() => value());\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} blankCellCreator\n * @returns\n */\nconst blankMatrixCreator = (rows, columns, blankCellCreator) => {\n    const arr = [];\n\n    for (let i = 0; i < rows; i++) {\n        let array = new Array(columns).fill([]);\n        array = fillArray(array, blankCellCreator);\n        arr.push(array);\n    }\n    return arr;\n};\n\n/**\n *\n *\n * @param {*} rowMatrices\n * @param {*} maxRows\n */\nconst blankCellCreator = (rowMatrices, maxRows) => rowMatrices.map((rowMatrix, rowMatrixIndex) => {\n    if (rowMatrix.length === 0 && maxRows[rowMatrixIndex] > 0) {\n        const numberOfRows = Math.max(rowMatrices[0].length, rowMatrices[1].length);\n        return blankMatrixCreator(numberOfRows, maxRows[rowMatrixIndex], createBlankCell);\n    }\n    if (rowMatrix.length > 0) {\n        if (rowMatrix[0] && rowMatrix[0].length <= maxRows[rowMatrixIndex]) {\n            return rowMatrix.map((row) => {\n                let arr = new Array(maxRows[rowMatrixIndex] - rowMatrix[0].length).fill(1);\n                arr = fillArray(arr, createBlankCell);\n                return [...arr, ...row];\n            });\n        }\n        return blankMatrixCreator(rowMatrix.length, maxRows[rowMatrixIndex], createBlankCell);\n    }\n    return rowMatrix;\n});\n\n/**\n *\n *\n * @param {*} context\n * @returns\n */\nexport const prepareLayout = (layout, components, config, measurement) => {\n    let topL;\n    let topR;\n    let bottomL;\n    let bottomR;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        showHeaders\n    } = config;\n    const maxRows = getMaxRows(rows);\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n\n    if (!showHeaders) {\n        const colLengths = [columns[0].length, columns[1].length];\n        // Create blank cells for corener matrices\n        [topL, topR] = blankCellCreator([new Array(colLengths[0]), new Array(colLengths[0])], maxRows);\n        [bottomL, bottomR] = blankCellCreator([new Array(colLengths[1]), new Array(colLengths[1])], maxRows);\n    } else {\n        [topL, topR, bottomL, bottomR] = [topLeft, topRight, bottomLeft, bottomRight];\n    }\n\n    layout.measurement(measurement)\n                    .config(config)\n                    .matrices({\n                        top: [topL, columns[0], topR],\n                        center: [rows[0], values, rows[1]],\n                        bottom: [bottomL, columns[1], bottomR]\n                    })\n                    .triggerReflow();\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n * @returns\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    // Get height width of the mount point\n    const { height, width } = mount.getBoundingClientRect();\n\n    const availableHeightForCanvas = context.height() >= 0 ? context.height() : (height || minHeight);\n    const availableWidthForCanvas = context.width() >= 0 ? context.width() : (width || minWidth);\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n","export const TITLE_CONFIG = {\n    position: 'top',\n    align: 'center',\n    padding: 8\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'bottom',\n    align: 'center',\n    padding: 16\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    MOUNT,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * @module\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string') {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string') {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string') {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    },\n    [MOUNT]: {\n        value: null\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { makeElement, selectElement } from 'muze-utils';\nimport { VERTICAL, HORIZONTAL, TOP, LEFT, RIGHT, BOTTOM } from '../constants';\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nconst setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].config().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].config().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.config({ labels: { rotation, smartTicks: false } });\n            });\n        });\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n * @returns\n */\nconst getSkeletons = (mount, layoutConfig, measurement) => {\n    const {\n        layoutArrangement,\n        classPrefix\n    } = layoutConfig;\n    const {\n        headers,\n        legends\n    } = layoutArrangement;\n    const {\n        canvasWidth,\n        canvasHeight,\n        mountSpace\n    } = measurement;\n    const container = selectElement(mount);\n    const components = {};\n    if (mountSpace.height && mountSpace.height < canvasHeight) {\n        container.style('overflow-y', 'scroll');\n    }\n    if (mountSpace.width && mountSpace.width < canvasWidth) {\n        container.style('overflow-x', 'scroll');\n    }\n    const mountPoint = makeElement(container, 'div', [1], `${classPrefix}-viz`)\n       .style('width', `${canvasWidth}px`)\n       .style('height', `${canvasHeight}px`);\n    makeElement(mountPoint, 'div', headers, `${classPrefix}-container`, {}, d => d).sort(() => -1)\n                    .style('width', `${canvasWidth}px`)\n                    .each(function (type) {\n                        components[type] = selectElement(this)\n                            .classed(`${classPrefix}-${type}-container`, true);\n                        if (type === 'group') {\n                            makeElement(components[type], 'div', legends, `${classPrefix}-${type}-inner-container`,\n                            {}, d => d).sort(() => -1)\n                                            .each(function (layoutType) {\n                                                components[layoutType] = selectElement(this)\n                                                     .classed(`${classPrefix}-${layoutType}-container`, true);\n                                            });\n                        }\n                    });\n\n    return components;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} container\n * @param {*} legendComponents\n */\nconst renderLegend = (legendConfig, container, legendComponents, measurement) => {\n    const sectionComponents = [];\n    const { legendSpace, headerHeight, height, width } = measurement;\n    const { legend, classPrefix } = legendConfig;\n    const { position } = legend;\n    const legendMount = makeElement(container, 'div', [1], `${classPrefix}-legend`);\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n    const legWidth = align === VERTICAL ? legendSpace.width : width;\n    const legHeight = align === VERTICAL ? height - headerHeight : legendSpace.height;\n\n    [container, legendMount].forEach((elem) => {\n        elem.style('width', `${Math.floor(legWidth)}px`)\n                        .style('height', `${legHeight}px`)\n                        .style('float', LEFT);\n    });\n\n    if (align === VERTICAL) {\n        let sections = -1;\n        let currHeight = legHeight;\n        let currWidth = 0;\n\n        legendComponents.forEach((legendInfo) => {\n            const leg = legendInfo.legend;\n            if (leg.measurement().height > currHeight) {\n                sections++;\n                currWidth = 0;\n                currHeight = legHeight;\n            } else {\n                sections < 0 && sections++;\n            }\n            sectionComponents[sections] = sectionComponents[sections] || [];\n            currHeight -= Math.min(leg.measurement().height, currHeight);\n            currWidth = Math.max(leg.measurement().width, currWidth);\n            sectionComponents[sections].push({\n                legend: leg,\n                legendHeight: legHeight,\n                legendWidth: currWidth\n            });\n        });\n\n        const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`)\n                        .each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true))\n                        .classed(`${classPrefix}-legend-vertical-section`, true)\n                        .style('width', d => `${d[0].legendWidth}px`);\n        makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                        .each(function (d) {\n                            d.legend.mount(this);\n                        })\n                        .style('width', d => `${d.legendWidth}px`);\n    } else {\n        const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`)\n                        .classed(`${classPrefix}-legend-horizontal-section`, true)\n                        .classed(`${classPrefix}-legend-section-${0}`, true)\n                        .style('width', `${legWidth}px`);\n\n        makeElement(mount, 'div', legendComponents, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                        .each(function (d) { d.legend.mount(this); })\n                        .style('width', d => `${d.legend.measurement().width}px`);\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} container\n * @param {*} type\n * @param {*} headers\n */\nconst renderHeader = (layoutConfig, container, type, headers) => {\n    const headerCell = headers[`${type}Cell`];\n    const config = layoutConfig[`${type}`];\n    const { position, align, padding } = config;\n    const cont = makeElement(container, 'div', [1], `${layoutConfig.classPrefix}-${type}-container`);\n\n    headerCell && headerCell.render(cont.node());\n    cont.style('width', `${100}%`);\n\n    if (config && headerCell) {\n        cont.style('float', LEFT)\n                        .style('text-align', align)\n                        .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} shifter\n */\nconst shiftHeaders = (config, shifter, measurement) => {\n    const { classPrefix, title, subtitle, legend } = config;\n    const { legendSpace } = measurement;\n    const { position } = legend;\n\n    shifter += position === LEFT ? legendSpace.width : 0;\n    title && selectElement(`.${classPrefix}-title-container`)\n                    .style('padding-left', title.align === LEFT ? `${shifter}px` : 0);\n    subtitle && selectElement(`.${classPrefix}-subtitle-container`)\n                    .style('padding-left', subtitle.align === LEFT ? `${shifter}px` : 0);\n    selectElement(`.${classPrefix}-legend-horizontal-section`)\n                    .style('padding-left', `${shifter}px`)\n                    .selectAll(`.${classPrefix}-legend-body, .${classPrefix}-legend-title`)\n                    .style('max-width', `${legendSpace.width - shifter}px`);\n    selectElement(`.${classPrefix}-legend-vertical-section`)\n                    .style('padding-left', null)\n                    .selectAll(`.${classPrefix}-legend-body, .${classPrefix}-legend-title`)\n                    .style('max-width', null);\n};\n\n/**\n *\n *\n * @param {*} mountPoint\n * @param {*} measurement\n * @param {*} classPrefix\n * @returns\n */\nconst prepareGridContainer = (mountPoint, measurement, classPrefix, alias) => {\n    if (!mountPoint) {\n        return this;\n    }\n\n    const {\n        height,\n        width\n    } = measurement;\n     // Create container for the layout\n    const container = makeElement(selectElement(mountPoint), 'div', [1], `${classPrefix}-grid-layout`)\n        .attr('id', `${classPrefix}-grid-layout-${alias}`)\n        .style('height', `${height}px`)\n        .style('width', `${Math.ceil(width)}px`);\n    // Mount for matrices\n    const mount = makeElement(container, 'div', [1], `${classPrefix}-layout-grid-container`)\n        .attr('id', `${classPrefix}-layout-grid-container-${alias}`)\n        .style('height', `${height}px`)\n        .style('width', `${Math.ceil(width)}px`)\n        .style('overflow-x', width > 300 ? 'none' : 'scroll')\n        .style('overflow-y', height > 300 ? 'none' : 'scroll');\n\n    return {\n        mount,\n        container\n    };\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} components\n * @param {*} layoutConfig\n * @param {*} measurement\n */\nexport const renderComponents = (context, components, layoutConfig, measurement) => {\n    const {\n        headers,\n        legends\n    } = components;\n    const {\n        classPrefix\n    } = layoutConfig;\n    const {\n        title,\n        legend,\n        subtitle,\n        layout\n    } = getSkeletons(context.mount(), layoutConfig, measurement);\n    const {\n        mount\n   } = prepareGridContainer(layout.node(), measurement, classPrefix, context.alias());\n    const padding = context.layout().getViewInformation().layoutDimensions.viewWidth[0];\n    measurement.padding = padding;\n    setLabelRotationForAxes(context);\n\n    // Render layout\n    context.layout().renderGrid(mount);\n    context.once('layer.drawn').then(() => {\n        renderLegend(layoutConfig, legend, legends, measurement);\n    });\n\n    renderHeader(layoutConfig, title, 'title', headers);\n    renderHeader(layoutConfig, subtitle, 'subtitle', headers);\n\n    shiftHeaders(layoutConfig, padding, measurement);\n    context.composition().visualGroup.matrixInstance().value.each((el) => {\n        el.valueOf().parentContainer(layout.node());\n    });\n};\n","import {\n    getDataModelFromIdentifiers\n} from 'muze-utils';\n\nexport default class GroupFireBolt {\n    constructor (context) {\n        this.context = context;\n    }\n\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.data();\n\n        propPayload.action = behaviour;\n        const model = getDataModelFromIdentifiers(data, criteria);\n        data.propagate(model, propPayload, {\n            sourceId: this.context.alias()\n        });\n        return this;\n    }\n}\n","import { isEqual } from 'muze-utils';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, MOUNT, DETAIL, DATA, CONFIG } from '../constants';\nimport { canvasOptions } from './local-options';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.fArray>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, context.dependencies())];\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    visualGroup.lockModel();\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.unlockModel();\n\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\n/**\n *\n *\n */\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    store.registerImmediateListener(MOUNT, () => {\n        const allOptions = Object.keys(context._allOptions);\n        const props = [...allOptions, ...Object.keys(canvasOptions)];\n        let equalityChecker = () => false;\n        store.registerChangeListener(props, (...params) => {\n            const updateProps = props.every((option, i) => {\n                switch (option) {\n                case ROWS:\n                case COLUMNS:\n                case DETAIL:\n                    equalityChecker = isEqual('Array');\n                    break;\n\n                case SHAPE:\n                case SIZE:\n                case COLOR:\n                case DATA:\n                case CONFIG:\n                    equalityChecker = isEqual('Object');\n                    break;\n                default:\n                    equalityChecker = () => true;\n                    break;\n                }\n                const oldVal = params[i][0];\n                const newVal = params[i][1];\n\n                return equalityChecker(oldVal, newVal);\n            });\n            // inform attached board to rerender\n            !updateProps && dispatchProps(context);\n            context.render();\n        }, true);\n    });\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId } from 'muze-utils';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport { renderComponents } from './renderer';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { initCanvas, setupChangeListener } from './helper';\n\n/**\n * This is the primary class which manages highlevel components like visualGroup, Titles, Legend, Extensions\n * (in future). Global level Muze functionality is subset this. Every time user works with an instance of\n * canvas in dom which provides instance level settings.\n *\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store({});\n\n        this.firebolt(new GroupFireBolt(this));\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const [, store] = transactor(this, options, this._store.model);\n        transactor(this, localOptions, store);\n        transactor(this, canvasOptions, store);\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof Canvas\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n\n            this.composition().visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     * @returns\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     *\n     *\n     * @param {*} eventName\n     * @returns\n     * @memberof Canvas\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        const visGroup = this.composition().visualGroup;\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const { components, layoutConfig, measurement } = getRenderDetails(this, mount);\n\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), components, layoutConfig, measurement);\n        // Render each component\n        renderComponents(this, components, layoutConfig, measurement);\n        // Update life cycle\n        lifeCycleManager.notify({ client: this, action: 'drawn' });\n        const promises = [];\n        visGroup.matrixInstance().value.each((el) => {\n            promises.push(el.valueOf().done());\n        });\n        Promise.all(promises).then(() => {\n            this._renderedResolve();\n        });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Canvas\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Canvas\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Canvas\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import Smartlabel from 'fusioncharts-smartlabel';\nimport {\n    transactor,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    getEvent,\n    require\n} from 'muze-utils';\nimport { SurrogateSideEffect, SpawnableSideEffect, sideEffects } from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    concrete: sideEffects,\n    abstract: {\n        SurrogateSideEffect,\n        SpawnableSideEffect\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.pkg = pkg;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.operators = operators;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}